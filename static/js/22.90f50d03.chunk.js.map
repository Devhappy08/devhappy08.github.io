{"version":3,"sources":["services/httpService.js","config/config.js","views/order-management/Edit-Order.js"],"names":["Apiurl","process","REACT_APP_STAGE","apiUrl","aadharTestRequest","aadharLiveRequest","aadharOtpVerifyRequest","headers","HttpService","register","data","axios","post","vendorLogin","vendorForgotPassword","setNewPassword","getVendorProfileDetail","get","vendorProfileUpdate","put","getAllShippingOrderData","getshippingOrderViewDetails","orderid","checkPinCodes","pincode","createShippingOrder","orderData","cloneShippingOrder","orderId","cancelShippingOrder","updateShippingOrder","EditOrder","theme","useTheme","shipOrderId","useParams","navigate","useNavigate","matchDownSM","useMediaQuery","breakpoints","down","useEffect","getRandomOrderId","getShippingOrderById","useState","firstName","lastName","address","addressOptional","state","city","phoneno","shippingAddress","setShippingAddress","bfirstName","blastName","baddress","baddressOptional","bpincode","bstate","bcity","bphoneno","billingAddress","setBillingAddress","key","product","quantity","amount","skucode","orderProducts","setOrderProducts","orderType","weightFd","dimension1","dimension2","dimension3","OrderValue","setOrderValue","a","result","console","log","notifier","type","message","autoDismissTimeout","onChange","e","target","name","value","onChangeShippingAddress","length","checkPinCodeValidation","onChangeBillingAddress","randomOrderId","Math","floor","random","pin","response","error","onSubmit","obj","products","checked","setChecked","setOrderData","finalProduct","map","ele","title","sx","width","elevation","style","padding","marginBottom","color","palette","secondary","main","gutterBottom","variant","container","spacing","item","xs","id","margin","size","fullWidth","label","select","sm","defaultValue","className","multiline","rows","event","billAddr","inputProps","fontSize","textAlign","background","float","onClick","lastIndex","pop","push","component","Paper","align","row","i","disabled","val","filterRow","filter","handleDelete","marginRight"],"mappings":"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","file":"static/js/22.90f50d03.chunk.js","sourcesContent":["import axios from 'axios';\nimport Config from '../config/config';\n\nconst Apiurl = Config.apiUrl;\nconst headers = {\n    'Content-Type': 'application/json',\n    'Access-Control-Allow-Origin': '*'\n};\nconst HttpService = {\n    register(data) {\n        return axios.post(`${Apiurl}vendorLogReg/signup`, data);\n    },\n    vendorLogin(data) {\n        return axios.post(`${Apiurl}vendorLogReg/login`, data);\n    },\n    vendorForgotPassword(data) {\n        return axios.post(`${Apiurl}vendorLogReg/forgot-password`, data);\n    },\n    setNewPassword(data) {\n        return axios.post(`${Apiurl}vendorLogReg/set-password`, data);\n    },\n    getVendorProfileDetail() {\n        return axios.get(`${Apiurl}vendorLogReg/loggedVendor`);\n    },\n    vendorProfileUpdate(data) {\n        return axios.put(`${Apiurl}vendors/editVendorProfile`, data);\n    },\n    getAllShippingOrderData() {\n        return axios.get(`${Apiurl}shippingOrders/all`);\n    },\n    getshippingOrderViewDetails(orderid) {\n        return axios.get(`${Apiurl}shippingOrders/getShippingOrderById/${orderid}`);\n    },\n    checkPinCodes(pincode) {\n        return axios.get(`https://api.postalpincode.in/pincode/${pincode}`, { headers });\n    },\n    createShippingOrder(orderData) {\n        return axios.post(`${Apiurl}shippingOrders/new`, orderData);\n    },\n    cloneShippingOrder(orderId) {\n        return axios.put(`${Apiurl}shippingOrders/cloneShippingOrder/${orderId}`);\n    },\n    cancelShippingOrder(orderId) {\n        return axios.put(`${Apiurl}shippingOrders/cancelShippingOrder/${orderId}`);\n    },\n    updateShippingOrder(orderId, orderData) {\n        return axios.put(`${Apiurl}shippingOrders/editShippingOrder/${orderId}`, orderData);\n    }\n};\n\nexport default HttpService;\n","const dev = {\n    apiUrl: 'http://3.109.60.131:3007/api/',\n    aadharTestRequest: 'https://test.zoop.one/in/identity/okyc/otp/request',\n    aadharLiveRequest: 'https://live.zoop.one/in/identity/okyc/otp/request',\n    aadharOtpVerifyRequest: 'https://test.zoop.one/in/identity/okyc/otp/verify'\n};\n\nconst test = {\n    apiUrl: 'http://3.109.60.131:3007/api/',\n    aadharTestRequest: 'https://test.zoop.one/in/identity/okyc/otp/request',\n    aadharLiveRequest: 'https://live.zoop.one/in/identity/okyc/otp/request',\n    aadharOtpVerifyRequest: 'https://test.zoop.one/in/identity/okyc/otp/verify'\n};\n\nconst prod = {\n    apiUrl: 'http://3.109.60.131:3007/api/'\n};\n\n// const config = process.env.REACT_APP_STAGE === 'test' ? test : dev;\n\n// eslint-disable-next-line no-nested-ternary\nconst config = process.env.REACT_APP_STAGE === 'production' ? prod : process.env.REACT_APP_STAGE === 'test' ? test : dev;\nexport default config;\n","import { useState, useEffect } from 'react';\nimport { useParams, useNavigate } from 'react-router-dom';\n// project imports\nimport MainCard from 'ui-component/cards/MainCard';\nimport { useTheme } from '@mui/material/styles';\nimport Box from '@mui/material/Box';\nimport Button from '@mui/material/Button';\nimport {\n    Grid,\n    TextField,\n    MenuItem,\n    useMediaQuery,\n    Paper,\n    TableContainer,\n    Table,\n    TableHead,\n    TableBody,\n    TableRow,\n    TableCell,\n    IconButton,\n    Checkbox,\n    Typography\n} from '@mui/material';\nimport HttpService from 'services/httpService';\nimport DeleteIcon from '@mui/icons-material/Delete';\nimport { notifier } from 'react-toast-notifier';\n// ==============================|| TYPOGRAPHY ||============================== //\n\nconst EditOrder = () => {\n    const theme = useTheme();\n    const { shipOrderId } = useParams();\n    const navigate = useNavigate();\n    const matchDownSM = useMediaQuery(theme.breakpoints.down('md'));\n\n    useEffect(() => {\n        // eslint-disable-next-line no-use-before-define\n        getRandomOrderId();\n        // eslint-disable-next-line no-use-before-define\n        getShippingOrderById(shipOrderId);\n        // eslint-disable-next-line\n    }, []);\n\n    const [shippingAddress, setShippingAddress] = useState({\n        firstName: '',\n        lastName: '',\n        address: '',\n        addressOptional: '',\n        pincode: '',\n        state: '',\n        city: '',\n        phoneno: ''\n    });\n    const { firstName, lastName, address, addressOptional, pincode, state, city, phoneno } = shippingAddress;\n\n    const [billingAddress, setBillingAddress] = useState({\n        bfirstName: '',\n        blastName: '',\n        baddress: '',\n        baddressOptional: '',\n        bpincode: '',\n        bstate: '',\n        bcity: '',\n        bphoneno: ''\n    });\n    const { bfirstName, blastName, baddress, baddressOptional, bpincode, bstate, bcity, bphoneno } = billingAddress;\n    const [orderProducts, setOrderProducts] = useState([\n        {\n            key: 1,\n            product: '',\n            quantity: 0,\n            amount: 0,\n            skucode: ''\n        }\n    ]);\n    const [OrderValue, setOrderValue] = useState({\n        orderId: '',\n        orderType: '',\n        weightFd: '',\n        dimension1: '',\n        dimension2: '',\n        dimension3: ''\n    });\n    const { orderId, orderType, weightFd, dimension1, dimension2, dimension3 } = OrderValue;\n\n    const getShippingOrderById = async (shipOrderId) => {\n        try {\n            const result = await HttpService.getshippingOrderViewDetails(shipOrderId);\n            console.log(result.data, 'ship data');\n            setShippingAddress(result.data.shippingAddress);\n            setBillingAddress(result.data.billingAddress);\n            setOrderProducts(result.data.orderProducts);\n            setOrderValue({\n                orderId: result.data.orderId,\n                orderType: result.data.orderType,\n                weightFd: result.data.weightFd,\n                dimension1: result.data.dimension1,\n                dimension2: result.data.dimension2,\n                dimension3: result.data.dimension3\n            });\n        } catch (error) {\n            notifier({\n                type: 'error',\n                message: 'Get Customer Project Detail error',\n                autoDismissTimeout: 5000\n            });\n        }\n    };\n    const onChange = (e) => {\n        setOrderValue({ ...OrderValue, [e.target.name]: e.target.value });\n    };\n\n    const onChangeShippingAddress = (e) => {\n        setShippingAddress({ ...shippingAddress, [e.target.name]: e.target.value });\n        if (e.target.name === 'pincode' && e.target.value.length === 6) {\n            // eslint-disable-next-line no-use-before-define\n            checkPinCodeValidation(e.target.value);\n        }\n    };\n\n    const onChangeBillingAddress = (e) => {\n        setBillingAddress({ ...billingAddress, [e.target.name]: e.target.value });\n    };\n\n    const getRandomOrderId = () => {\n        const randomOrderId = Math.floor(10000000 + Math.random() * 9000000);\n        setOrderValue({ ...OrderValue, orderId: randomOrderId });\n    };\n\n    const addRows = () => {\n        const rows = [...orderProducts];\n        const lastIndex = orderProducts.pop();\n        rows.push({\n            key: lastIndex.key + 1,\n            product: '',\n            quantity: 0,\n            amount: 0,\n            skucode: ''\n        });\n        setOrderProducts(rows);\n    };\n\n    const checkPinCodeValidation = async (pin) => {\n        if (pin.length === 6) {\n            try {\n                const response = await HttpService.checkPinCodes(pin);\n                console.log(response, 'respons');\n            } catch (error) {\n                console.error(error);\n            }\n        }\n    };\n\n    const handleDelete = (val) => {\n        const filterRow = orderProducts.filter((item) => item.key !== val);\n        setOrderProducts(filterRow);\n    };\n\n    const onSubmit = async () => {\n        const obj = {\n            OrderValue,\n            shippingAddress,\n            billingAddress,\n            products: orderProducts\n        };\n        try {\n            const response = await HttpService.updateShippingOrder(shipOrderId, obj);\n            notifier({\n                type: 'success',\n                message: response.data,\n                autoDismissTimeout: 5000\n            });\n            navigate('/order-list');\n        } catch (error) {\n            console.error(error);\n        }\n    };\n\n    const [checked, setChecked] = useState(false);\n\n    const handleCheckChange = (event) => {\n        if (event.target.checked === true) {\n            setChecked(true);\n            const billAddr = {\n                bfirstName: shippingAddress.firstName,\n                blastName: shippingAddress.lastName,\n                baddress: shippingAddress.address,\n                baddressOptional: shippingAddress.addressOptional,\n                bpincode: shippingAddress.pincode,\n                bstate: shippingAddress.state,\n                bcity: shippingAddress.city,\n                bphoneno: shippingAddress.phoneno\n            };\n            setBillingAddress(billAddr);\n        } else {\n            setChecked(false);\n            setBillingAddress({\n                bfirstName: '',\n                blastName: '',\n                baddress: '',\n                baddressOptional: '',\n                bpincode: '',\n                bstate: '',\n                bcity: '',\n                bphoneno: ''\n            });\n        }\n    };\n\n    const setOrderData = (e, key) => {\n        const finalProduct = orderProducts.map((ele) => {\n            if (ele.key === key) {\n                ele[e.target.name] = e.target.value;\n            }\n            return ele;\n        });\n        setOrderProducts(finalProduct);\n    };\n\n    return (\n        <MainCard title=\"Edit Order\">\n            <Box sx={{ width: '100%' }}>\n                <Paper elevation={3} style={{ padding: 20, marginBottom: 20 }}>\n                    <Typography color={theme.palette.secondary.main} gutterBottom variant={matchDownSM ? 'h3' : 'h2'}>\n                        Order Information\n                    </Typography>\n                    <Grid container spacing={3}>\n                        <Grid item xs={matchDownSM ? 12 : 6}>\n                            <TextField\n                                id=\"outlined-orderid-basic\"\n                                margin=\"normal\"\n                                size=\"small\"\n                                name=\"orderId\"\n                                value={orderId}\n                                onChange={onChange}\n                                fullWidth\n                                label=\"Order Id\"\n                                variant=\"outlined\"\n                            />\n                        </Grid>\n                        <Grid item xs={matchDownSM ? 12 : 6}>\n                            <TextField\n                                id=\"outlined-select-ordertype\"\n                                select\n                                label=\"Order Type\"\n                                name=\"orderType\"\n                                value={orderType}\n                                onChange={onChange}\n                                fullWidth\n                                size=\"small\"\n                                margin=\"normal\"\n                                variant=\"outlined\"\n                            >\n                                <MenuItem value=\"cashOnDelivery\">Cash on Delivery</MenuItem>\n                                <MenuItem value=\"Prapaid\">Prepaid</MenuItem>\n                            </TextField>\n                        </Grid>\n                    </Grid>\n                </Paper>\n                <Grid container spacing={3} style={{ marginBottom: 20 }}>\n                    <Grid item xs={matchDownSM ? 12 : 6}>\n                        <Paper elevation={3} style={{ padding: 20 }}>\n                            <Typography color={theme.palette.secondary.main} gutterBottom variant={matchDownSM ? 'h3' : 'h2'}>\n                                Shipping Information\n                            </Typography>\n                            <Grid container spacing={matchDownSM ? 0 : 2}>\n                                <Grid item xs={12} sm={6}>\n                                    <TextField\n                                        fullWidth\n                                        label=\"First Name\"\n                                        margin=\"normal\"\n                                        name=\"firstName\"\n                                        value={firstName}\n                                        type=\"text\"\n                                        size=\"small\"\n                                        onChange={onChangeShippingAddress}\n                                        defaultValue=\"\"\n                                    />\n                                </Grid>\n                                <Grid item xs={12} sm={6}>\n                                    <TextField\n                                        fullWidth\n                                        label=\"Last Name\"\n                                        margin=\"normal\"\n                                        name=\"lastName\"\n                                        value={lastName}\n                                        size=\"small\"\n                                        onChange={onChangeShippingAddress}\n                                        type=\"text\"\n                                        defaultValue=\"\"\n                                    />\n                                </Grid>\n                                <Grid item xs={12} sm={6}>\n                                    <TextField\n                                        id=\"outlined-multiline-addr1-static\"\n                                        className=\"address1\"\n                                        label=\"Address\"\n                                        multiline\n                                        fullWidth\n                                        margin=\"normal\"\n                                        rows={3}\n                                        size=\"small\"\n                                        name=\"address\"\n                                        value={address}\n                                        onChange={onChangeShippingAddress}\n                                        variant=\"outlined\"\n                                    />\n                                </Grid>\n                                <Grid item xs={12} sm={6}>\n                                    <TextField\n                                        className=\"address2\"\n                                        id=\"outlined-multiline-addr2-static\"\n                                        label=\"Address 2 (Optional)\"\n                                        multiline\n                                        fullWidth\n                                        margin=\"normal\"\n                                        rows={3}\n                                        name=\"addressOptional\"\n                                        value={addressOptional}\n                                        onChange={onChangeShippingAddress}\n                                        size=\"small\"\n                                        variant=\"outlined\"\n                                    />\n                                </Grid>\n                            </Grid>\n                            <TextField\n                                id=\"outlined-picode-basic\"\n                                margin=\"normal\"\n                                size=\"small\"\n                                name=\"pincode\"\n                                value={pincode}\n                                // onChange={(e) => checkPinCodeValidation(e.target.value)}\n                                onChange={onChangeShippingAddress}\n                                fullWidth\n                                label=\"Pin Code\"\n                                variant=\"outlined\"\n                            />\n                            <Grid container spacing={matchDownSM ? 0 : 2}>\n                                <Grid item xs={12} sm={6}>\n                                    <TextField\n                                        className=\"address1\"\n                                        id=\"outlined-city-basic\"\n                                        size=\"small\"\n                                        margin=\"normal\"\n                                        name=\"city\"\n                                        value={city}\n                                        onChange={onChangeShippingAddress}\n                                        fullWidth\n                                        label=\"City\"\n                                        variant=\"outlined\"\n                                    />\n                                </Grid>\n                                <Grid item xs={12} sm={6}>\n                                    <TextField\n                                        className=\"address2\"\n                                        id=\"outlined-state-basic\"\n                                        size=\"small\"\n                                        margin=\"normal\"\n                                        name=\"state\"\n                                        value={state}\n                                        onChange={onChangeShippingAddress}\n                                        fullWidth\n                                        label=\"State\"\n                                        variant=\"outlined\"\n                                    />\n                                </Grid>\n                            </Grid>\n                            <TextField\n                                id=\"outlined-phoneno-basic\"\n                                margin=\"normal\"\n                                size=\"small\"\n                                fullWidth\n                                label=\"Phone\"\n                                name=\"phoneno\"\n                                value={phoneno}\n                                onChange={onChangeShippingAddress}\n                                variant=\"outlined\"\n                            />\n                        </Paper>\n                    </Grid>\n                    <Grid item xs={matchDownSM ? 12 : 6}>\n                        <Paper elevation={3} style={{ padding: 20 }}>\n                            <Typography color={theme.palette.secondary.main} gutterBottom variant={matchDownSM ? 'h3' : 'h2'}>\n                                Billing Information\n                            </Typography>\n                            <Checkbox checked={checked} onChange={handleCheckChange} inputProps={{ 'aria-label': 'select all desserts' }} />\n                            <Typography variant=\"caption\" fontSize=\"16px\" textAlign={matchDownSM ? 'center' : 'inherit'}>\n                                Same as Shipping Address\n                            </Typography>\n                            {/* <h5 style={{ display: 'inline-block' }}>Same as Shipping Address</h5> */}\n                            <Grid container spacing={matchDownSM ? 0 : 2}>\n                                <Grid item xs={12} sm={6}>\n                                    <TextField\n                                        fullWidth\n                                        label=\"First Name\"\n                                        margin=\"normal\"\n                                        name=\"bfirstName\"\n                                        value={bfirstName}\n                                        type=\"text\"\n                                        size=\"small\"\n                                        onChange={onChangeBillingAddress}\n                                        defaultValue=\"\"\n                                    />\n                                </Grid>\n                                <Grid item xs={12} sm={6}>\n                                    <TextField\n                                        fullWidth\n                                        label=\"Last Name\"\n                                        margin=\"normal\"\n                                        name=\"blastName\"\n                                        value={blastName}\n                                        size=\"small\"\n                                        onChange={onChangeBillingAddress}\n                                        type=\"text\"\n                                        defaultValue=\"\"\n                                    />\n                                </Grid>\n                                <Grid item xs={12} sm={6}>\n                                    <TextField\n                                        id=\"outlined-multiline-baddr1-static\"\n                                        className=\"address1\"\n                                        label=\"Address\"\n                                        multiline\n                                        fullWidth\n                                        margin=\"normal\"\n                                        rows={3}\n                                        size=\"small\"\n                                        name=\"baddress\"\n                                        value={baddress}\n                                        onChange={onChangeBillingAddress}\n                                        variant=\"outlined\"\n                                    />\n                                </Grid>\n                                <Grid item xs={12} sm={6}>\n                                    <TextField\n                                        className=\"address2\"\n                                        id=\"outlined-multiline-baddr2-static\"\n                                        label=\"Address 2 (Optional)\"\n                                        multiline\n                                        fullWidth\n                                        margin=\"normal\"\n                                        rows={3}\n                                        name=\"baddressOptional\"\n                                        value={baddressOptional}\n                                        onChange={onChangeBillingAddress}\n                                        size=\"small\"\n                                        variant=\"outlined\"\n                                    />\n                                </Grid>\n                            </Grid>\n                            <TextField\n                                id=\"outlined-bpincode-basic\"\n                                margin=\"normal\"\n                                size=\"small\"\n                                name=\"bpincode\"\n                                value={bpincode}\n                                onChange={onChangeBillingAddress}\n                                fullWidth\n                                label=\"Pin Code\"\n                                variant=\"outlined\"\n                            />\n                            <Grid container spacing={matchDownSM ? 0 : 2}>\n                                <Grid item xs={12} sm={6}>\n                                    <TextField\n                                        className=\"address1\"\n                                        id=\"outlined-bcity-basic\"\n                                        size=\"small\"\n                                        margin=\"normal\"\n                                        name=\"bcity\"\n                                        value={bcity}\n                                        onChange={onChangeBillingAddress}\n                                        fullWidth\n                                        label=\"City\"\n                                        variant=\"outlined\"\n                                    />\n                                </Grid>\n                                <Grid item xs={12} sm={6}>\n                                    <TextField\n                                        className=\"address2\"\n                                        id=\"outlined-bstate-basic\"\n                                        size=\"small\"\n                                        margin=\"normal\"\n                                        name=\"bstate\"\n                                        value={bstate}\n                                        onChange={onChangeBillingAddress}\n                                        fullWidth\n                                        label=\"State\"\n                                        variant=\"outlined\"\n                                    />\n                                </Grid>\n                            </Grid>\n                            <TextField\n                                id=\"outlined-bphone-basic\"\n                                margin=\"normal\"\n                                size=\"small\"\n                                fullWidth\n                                label=\"Phone\"\n                                name=\"bphoneno\"\n                                value={bphoneno}\n                                onChange={onChangeBillingAddress}\n                                variant=\"outlined\"\n                            />\n                        </Paper>\n                    </Grid>\n                </Grid>\n\n                <Grid container spacing={3} style={{ marginBottom: 20 }}>\n                    <Grid item xs={12}>\n                        <Paper elevation={3}>\n                            <Button variant=\"contained\" style={{ background: '#716ACA', margin: 15, float: 'right' }} onClick={addRows}>\n                                Add Row\n                            </Button>\n                            <TableContainer component={Paper}>\n                                <Table ria-label=\"customized table\">\n                                    <TableHead>\n                                        <TableRow>\n                                            <TableCell align=\"center\">Products</TableCell>\n                                            <TableCell align=\"center\">Quantity</TableCell>\n                                            <TableCell align=\"center\">Amount&nbsp;(Rs)</TableCell>\n                                            <TableCell align=\"center\">SKU&nbsp;(Optional)</TableCell>\n                                            <TableCell align=\"center\">Action</TableCell>\n                                        </TableRow>\n                                    </TableHead>\n                                    <TableBody>\n                                        {orderProducts?.map((row, i) => (\n                                            <TableRow key={i}>\n                                                <TableCell>\n                                                    <TextField\n                                                        id=\"outlined-product-basic\"\n                                                        margin=\"normal\"\n                                                        size=\"small\"\n                                                        name=\"product\"\n                                                        onChange={(e) => setOrderData(e, row.key)}\n                                                        value={row.product}\n                                                        fullWidth\n                                                        label=\"Product Name\"\n                                                        variant=\"outlined\"\n                                                    />\n                                                </TableCell>\n                                                <TableCell align=\"center\">\n                                                    <TextField\n                                                        id=\"outlined-quantity-basic\"\n                                                        margin=\"normal\"\n                                                        size=\"small\"\n                                                        name=\"quantity\"\n                                                        onChange={(e) => setOrderData(e, row.key)}\n                                                        value={row.quantity}\n                                                        fullWidth\n                                                        label=\"Product Quantity\"\n                                                        variant=\"outlined\"\n                                                    />\n                                                </TableCell>\n                                                <TableCell align=\"center\">\n                                                    <TextField\n                                                        id=\"outlined-amount-basic\"\n                                                        margin=\"normal\"\n                                                        size=\"small\"\n                                                        name=\"amount\"\n                                                        onChange={(e) => setOrderData(e, row.key)}\n                                                        value={row.amount}\n                                                        fullWidth\n                                                        label=\"Amount\"\n                                                        variant=\"outlined\"\n                                                    />\n                                                </TableCell>\n                                                <TableCell align=\"center\">\n                                                    <TextField\n                                                        id=\"outlined-skucode-basic\"\n                                                        margin=\"normal\"\n                                                        size=\"small\"\n                                                        name=\"skucode\"\n                                                        onChange={(e) => setOrderData(e, row.key)}\n                                                        value={row.skucode}\n                                                        fullWidth\n                                                        label=\"SKU\"\n                                                        variant=\"outlined\"\n                                                    />\n                                                </TableCell>\n                                                <TableCell>\n                                                    {orderProducts.length === 1 || i === 0 ? (\n                                                        <IconButton disabled aria-label=\"Delete Product\" color=\"primary\">\n                                                            <DeleteIcon />\n                                                        </IconButton>\n                                                    ) : (\n                                                        <IconButton\n                                                            onClick={() => handleDelete(row.key)}\n                                                            aria-label=\"Delete Product\"\n                                                            color=\"error\"\n                                                        >\n                                                            <DeleteIcon />\n                                                        </IconButton>\n                                                    )}\n                                                </TableCell>\n                                            </TableRow>\n                                        ))}\n                                    </TableBody>\n                                </Table>\n                            </TableContainer>\n                        </Paper>\n                    </Grid>\n                </Grid>\n\n                <Grid container spacing={3}>\n                    <Grid item xs={matchDownSM ? 12 : 6}>\n                        <Paper elevation={3} style={{ padding: 20 }}>\n                            <TextField\n                                id=\"outlined-weight-basic\"\n                                margin=\"normal\"\n                                size=\"small\"\n                                name=\"weightFd\"\n                                value={weightFd}\n                                onChange={onChange}\n                                fullWidth\n                                label=\"Weight fd\"\n                                variant=\"outlined\"\n                            />\n                            <TextField\n                                id=\"outlined-dime1-basic\"\n                                margin=\"normal\"\n                                size=\"small\"\n                                name=\"dimension1\"\n                                value={dimension1}\n                                onChange={onChange}\n                                label=\"CM\"\n                                variant=\"outlined\"\n                                style={{ width: '30%', marginRight: '10px' }}\n                            />\n                            <TextField\n                                id=\"outlined-dime2-basic\"\n                                margin=\"normal\"\n                                size=\"small\"\n                                name=\"dimension2\"\n                                value={dimension2}\n                                onChange={onChange}\n                                label=\"CM\"\n                                variant=\"outlined\"\n                                style={{ width: '30%', marginRight: '10px' }}\n                            />\n                            <TextField\n                                id=\"outlined-dime3-basic\"\n                                margin=\"normal\"\n                                size=\"small\"\n                                name=\"dimension3\"\n                                value={dimension3}\n                                onChange={onChange}\n                                label=\"CM\"\n                                variant=\"outlined\"\n                                style={{ width: '30%', marginBottom: 20 }}\n                            />\n                            <Button variant=\"contained\" color=\"success\" size=\"small\" onClick={onSubmit} style={{ marginRight: '5px' }}>\n                                Save\n                            </Button>\n                            <Button variant=\"contained\" color=\"error\" size=\"small\">\n                                Cancel\n                            </Button>\n                        </Paper>\n                    </Grid>\n                </Grid>\n            </Box>\n        </MainCard>\n    );\n};\nexport default EditOrder;\n"],"sourceRoot":""}