{"version":3,"sources":["services/httpService.js","config/config.js","../node_modules/@mui/material/InputAdornment/inputAdornmentClasses.js","../node_modules/@mui/material/InputAdornment/InputAdornment.js","views/order-management/Create-Order.js"],"names":["Apiurl","process","REACT_APP_STAGE","apiUrl","aadharTestRequest","aadharLiveRequest","aadharOtpVerifyRequest","headers","HttpService","register","data","axios","post","vendorLogin","vendorForgotPassword","setNewPassword","getVendorProfileDetail","get","vendorProfileUpdate","put","getAllShippingOrderData","getshippingOrderViewDetails","orderid","checkPinCodes","pincode","createShippingOrder","orderData","cloneShippingOrder","orderId","cancelShippingOrder","updateShippingOrder","getInputAdornmentUtilityClass","slot","generateUtilityClass","_span","inputAdornmentClasses","generateUtilityClasses","_excluded","InputAdornmentRoot","styled","name","overridesResolver","props","styles","ownerState","root","capitalize","position","disablePointerEvents","variant","theme","_extends","display","height","maxHeight","alignItems","whiteSpace","color","palette","action","active","positionStart","hiddenLabel","marginTop","marginRight","marginLeft","pointerEvents","InputAdornment","React","inProps","ref","useThemeProps","children","className","component","disableTypography","variantProp","other","_objectWithoutPropertiesLoose","muiFormControl","useFormControl","size","classes","slots","composeClasses","useUtilityClasses","_jsx","FormControlContext","Provider","value","as","clsx","_jsxs","Typography","CreateOrder","useTheme","navigate","useNavigate","matchDownSM","useMediaQuery","breakpoints","down","useEffect","getRandomOrderId","useState","firstName","lastName","address","addressOptional","state","city","phoneno","shippingAddress","setShippingAddress","bfirstName","blastName","baddress","baddressOptional","bpincode","bstate","bcity","bphoneno","billingAddress","setBillingAddress","key","product","quantity","amount","skucode","orderProducts","setOrderProducts","orderType","weightFd","dimension1","dimension2","dimension3","OrderValue","setOrderValue","phoneError","bPhoneError","prodQty","prodAmt","errorMsg","setErrorMsg","onChange","e","target","onChangeShippingAddress","onChangeBillingAddress","randomOrderId","Math","floor","random","onSubmit","a","obj","products","response","notifier","type","message","autoDismissTimeout","console","error","checked","setChecked","setOrderData","finalProduct","map","ele","validMobileRegex","RegExp","title","sx","width","elevation","style","padding","marginBottom","secondary","main","gutterBottom","container","spacing","item","xs","id","margin","fullWidth","label","select","sm","defaultValue","multiline","rows","length","pin","fetch","then","json","PostOffice","State","District","checkPinCodeValidation","test","InputProps","startAdornment","helperText","event","billAddr","inputProps","fontSize","textAlign","background","float","onClick","lastIndex","pop","push","Paper","align","row","i","disabled","val","filterRow","filter","handleDelete"],"mappings":"sJAGMA,GCkByC,eAAhCC,mIAAYC,gBAPd,CACTC,OAAQ,6CAMyDF,mIAAYC,gBAdpE,CACTC,OAAQ,2CACRC,kBAAmB,qDACnBC,kBAAmB,qDACnBC,uBAAwB,uDDRNH,OAChBI,EAAU,CACZ,eAAgB,mBAChB,8BAA+B,KAE7BC,EAAc,CAChBC,SADgB,SACPC,GACL,OAAOC,IAAMC,KAAN,UAAcZ,EAAd,uBAA2CU,IAEtDG,YAJgB,SAIJH,GACR,OAAOC,IAAMC,KAAN,UAAcZ,EAAd,sBAA0CU,IAErDI,qBAPgB,SAOKJ,GACjB,OAAOC,IAAMC,KAAN,UAAcZ,EAAd,gCAAoDU,IAE/DK,eAVgB,SAUDL,GACX,OAAOC,IAAMC,KAAN,UAAcZ,EAAd,6BAAiDU,IAE5DM,uBAbgB,WAcZ,OAAOL,IAAMM,IAAN,UAAajB,EAAb,+BAEXkB,oBAhBgB,SAgBIR,GAChB,OAAOC,IAAMQ,IAAN,UAAanB,EAAb,6BAAgDU,IAE3DU,wBAnBgB,WAoBZ,OAAOT,IAAMM,IAAN,UAAajB,EAAb,wBAEXqB,4BAtBgB,SAsBYC,GACxB,OAAOX,IAAMM,IAAN,UAAajB,EAAb,+CAA0DsB,KAErEC,cAzBgB,SAyBFC,GACV,OAAOb,IAAMM,IAAN,+CAAkDO,GAAW,CAAEjB,aAE1EkB,oBA5BgB,SA4BIC,GAChB,OAAOf,IAAMC,KAAN,UAAcZ,EAAd,sBAA0C0B,IAErDC,mBA/BgB,SA+BGC,GACf,OAAOjB,IAAMQ,IAAN,UAAanB,EAAb,6CAAwD4B,KAEnEC,oBAlCgB,SAkCID,GAChB,OAAOjB,IAAMQ,IAAN,UAAanB,EAAb,8CAAyD4B,KAEpEE,oBArCgB,SAqCIF,EAASF,GACzB,OAAOf,IAAMQ,IAAN,UAAanB,EAAb,4CAAuD4B,GAAWF,KAIlElB,O,sIEjDR,SAASuB,EAA8BC,GAC5C,OAAOC,YAAqB,oBAAqBD,GAEnD,ICDIE,EDEWC,EADeC,YAAuB,oBAAqB,CAAC,OAAQ,SAAU,WAAY,WAAY,gBAAiB,cAAe,uBAAwB,cAAe,c,cCCtLC,EAAY,CAAC,WAAY,YAAa,YAAa,uBAAwB,oBAAqB,WAAY,WAqC5GC,EAAqBC,YAAO,MAAO,CACvCC,KAAM,oBACNR,KAAM,OACNS,kBAzBwB,SAACC,EAAOC,GAChC,IACEC,EACEF,EADFE,WAEF,MAAO,CAACD,EAAOE,KAAMF,EAAO,WAAD,OAAYG,YAAWF,EAAWG,aAAkD,IAApCH,EAAWI,sBAAiCL,EAAOK,qBAAsBL,EAAOC,EAAWK,YAkB7IV,EAIxB,gBACDW,EADC,EACDA,MACAN,EAFC,EAEDA,WAFC,OAGGO,YAAS,CACbC,QAAS,OACTC,OAAQ,SAERC,UAAW,MACXC,WAAY,SACZC,WAAY,SACZC,MAAOP,EAAMQ,QAAQC,OAAOC,QACJ,WAAvBhB,EAAWK,SAAX,2BAEKd,EAAsB0B,cAF3B,kBAEkD1B,EAAsB2B,YAFxE,KAEyF,CACxFC,UAAW,KAEY,UAAxBnB,EAAWG,UAAwB,CAEpCiB,YAAa,GACY,QAAxBpB,EAAWG,UAAsB,CAElCkB,WAAY,IACyB,IAApCrB,EAAWI,sBAAiC,CAE7CkB,cAAe,YAEXC,EAA8BC,cAAiB,SAAwBC,EAASC,GACpF,IAAM5B,EAAQ6B,YAAc,CAC1B7B,MAAO2B,EACP7B,KAAM,sBAINgC,EAOE9B,EAPF8B,SACAC,EAME/B,EANF+B,UAFF,EAQI/B,EALFgC,iBAHF,MAGc,MAHd,IAQIhC,EAJFM,4BAJF,WAQIN,EAHFiC,yBALF,SAME5B,EAEEL,EAFFK,SACS6B,EACPlC,EADFO,QAEI4B,EAAQC,YAA8BpC,EAAOL,GAE7C0C,EAAiBC,eAAoB,GACvC/B,EAAU2B,EAEVA,GAAeG,EAAe9B,QAQ9B8B,IAAmB9B,IACrBA,EAAU8B,EAAe9B,SAG3B,IAAML,EAAaO,YAAS,GAAIT,EAAO,CACrCoB,YAAaiB,EAAejB,YAC5BmB,KAAMF,EAAeE,KACrBjC,uBACAD,WACAE,YAGIiC,EArFkB,SAAAtC,GACxB,IACEsC,EAMEtC,EANFsC,QACAlC,EAKEJ,EALFI,qBACAc,EAIElB,EAJFkB,YACAf,EAGEH,EAHFG,SACAkC,EAEErC,EAFFqC,KACAhC,EACEL,EADFK,QAEIkC,EAAQ,CACZtC,KAAM,CAAC,OAAQG,GAAwB,uBAAwBD,GAAY,WAAJ,OAAeD,YAAWC,IAAaE,EAASa,GAAe,cAAemB,GAAQ,OAAJ,OAAWnC,YAAWmC,MAEjL,OAAOG,YAAeD,EAAOpD,EAA+BmD,GAyE5CG,CAAkBzC,GAClC,OAAoB0C,cAAKC,IAAmBC,SAAU,CACpDC,MAAO,KACPjB,SAAuBc,cAAKhD,EAAoBa,YAAS,CACvDuC,GAAIhB,EACJ9B,WAAYA,EACZ6B,UAAWkB,YAAKT,EAAQrC,KAAM4B,GAC9BH,IAAKA,GACJO,EAAO,CACRL,SAA8B,kBAAbA,GAA0BG,EAGzBiB,eAAMxB,WAAgB,CACtCI,SAAU,CAAc,UAAbzB,EAEXb,IAAUA,EAAqBoD,cAAK,OAAQ,CAC1Cb,UAAW,cACXD,SAAU,YACN,KAAMA,KAT8Dc,cAAKO,IAAY,CAC3FpC,MAAO,iBACPe,SAAUA,YAuEHL,O,sUC2fA2B,UAhqBK,WAChB,IAAM5C,EAAQ6C,cACRC,EAAWC,cACXC,EAAcC,YAAcjD,EAAMkD,YAAYC,KAAK,OAEzDC,qBAAU,WAENC,OAED,IAEH,MAA8CC,mBAAS,CACnDC,UAAW,GACXC,SAAU,GACVC,QAAS,GACTC,gBAAiB,GACjBpF,QAAS,GACTqF,MAAO,GACPC,KAAM,GACNC,QAAS,KARb,mBAAOC,EAAP,KAAwBC,EAAxB,KAUQR,EAAiFO,EAAjFP,UAAWC,EAAsEM,EAAtEN,SAAUC,EAA4DK,EAA5DL,QAASC,EAAmDI,EAAnDJ,gBAAiBpF,EAAkCwF,EAAlCxF,QAASqF,EAAyBG,EAAzBH,MAAOC,EAAkBE,EAAlBF,KAAMC,EAAYC,EAAZD,QAE7E,EAA4CP,mBAAS,CACjDU,WAAY,GACZC,UAAW,GACXC,SAAU,GACVC,iBAAkB,GAClBC,SAAU,GACVC,OAAQ,GACRC,MAAO,GACPC,SAAU,KARd,mBAAOC,EAAP,KAAuBC,EAAvB,KAUQT,EAAyFQ,EAAzFR,WAAYC,EAA6EO,EAA7EP,UAAWC,EAAkEM,EAAlEN,SAAUC,EAAwDK,EAAxDL,iBAAkBC,GAAsCI,EAAtCJ,SAAUC,GAA4BG,EAA5BH,OAAQC,GAAoBE,EAApBF,MAAOC,GAAaC,EAAbD,SACpF,GAA0CjB,mBAAS,CAC/C,CACIoB,IAAK,EACLC,QAAS,GACTC,SAAU,EACVC,OAAQ,EACRC,QAAS,MANjB,qBAAOC,GAAP,MAAsBC,GAAtB,MASA,GAAoC1B,mBAAS,CACzC5E,QAAS,GACTuG,UAAW,GACXC,SAAU,GACVC,WAAY,GACZC,WAAY,GACZC,WAAY,KANhB,qBAAOC,GAAP,MAAmBC,GAAnB,MAQQ7G,GAAqE4G,GAArE5G,QAASuG,GAA4DK,GAA5DL,UAAWC,GAAiDI,GAAjDJ,SAAUC,GAAuCG,GAAvCH,WAAYC,GAA2BE,GAA3BF,WAAYC,GAAeC,GAAfD,WAC9D,GAAgC/B,mBAAS,CACrCkC,WAAY,GACZC,YAAa,GACbC,QAAS,GACTC,QAAS,KAJb,qBAAOC,GAAP,MAAiBC,GAAjB,MAOMC,GAAW,SAACC,GACdR,GAAc,2BAAKD,IAAN,kBAAmBS,EAAEC,OAAO1G,KAAOyG,EAAEC,OAAOzD,UAGvD0D,GAA0B,SAACF,GAC7BhC,EAAmB,2BAAKD,GAAN,kBAAwBiC,EAAEC,OAAO1G,KAAOyG,EAAEC,OAAOzD,UAGjE2D,GAAyB,SAACH,GAC5BtB,EAAkB,2BAAKD,GAAN,kBAAuBuB,EAAEC,OAAO1G,KAAOyG,EAAEC,OAAOzD,UAG/Dc,GAAmB,WACrB,IAAM8C,EAAgBC,KAAKC,MAAM,IAA2B,IAAhBD,KAAKE,UACjDf,GAAc,2BAAKD,IAAN,IAAkB5G,QAASyH,MAsCtCI,GAAQ,uCAAG,8BAAAC,EAAA,6DACPC,EAAM,CACRnB,cACAxB,kBACAU,iBACAkC,SAAU3B,IALD,kBAQczH,IAAYiB,oBAAoBkI,GAR9C,OAQHE,EARG,OASTC,mBAAS,CACLC,KAAM,UACNC,QAASH,EAASnJ,KAClBuJ,mBAAoB,MAExBjE,EAAS,eAdA,gDAgBTkE,QAAQC,MAAR,MAhBS,yDAAH,qDAoBd,GAA8B3D,oBAAS,GAAvC,qBAAO4D,GAAP,MAAgBC,GAAhB,MA+BMC,GAAe,SAACrB,EAAGrB,GACrB,IAAM2C,EAAetC,GAAcuC,KAAI,SAACC,GAIpC,OAHIA,EAAI7C,MAAQA,IACZ6C,EAAIxB,EAAEC,OAAO1G,MAAQyG,EAAEC,OAAOzD,OAE3BgF,KAEXvC,GAAiBqC,IAGfG,GAAmBC,OAAO,cAChC,OACI,cAAC,IAAD,CAAUC,MAAM,eAAhB,SACI,eAAC,IAAD,CAAKC,GAAI,CAAEC,MAAO,QAAlB,UACI,eAAC,IAAD,CAAOC,UAAW,EAAGC,MAAO,CAAEC,QAAS,GAAIC,aAAc,IAAzD,UACI,cAAC,IAAD,CAAYzH,MAAOP,EAAMQ,QAAQyH,UAAUC,KAAMC,cAAY,EAACpI,QAASiD,EAAc,KAAO,KAA5F,+BAGA,eAAC,IAAD,CAAMoF,WAAS,EAACC,QAAS,EAAzB,UACI,cAAC,IAAD,CAAMC,MAAI,EAACC,GAAIvF,EAAc,GAAK,EAAlC,SACI,cAAC,IAAD,CACIwF,GAAG,yBACHC,OAAO,SACP1G,KAAK,QACLzC,KAAK,UACLiD,MAAO7D,GACPoH,SAAUA,GACV4C,WAAS,EACTC,MAAM,WACN5I,QAAQ,eAGhB,cAAC,IAAD,CAAMuI,MAAI,EAACC,GAAIvF,EAAc,GAAK,EAAlC,SACI,eAAC,IAAD,CACIwF,GAAG,4BACHI,QAAM,EACND,MAAM,aACNrJ,KAAK,YACLiD,MAAO0C,GACPa,SAAUA,GACV4C,WAAS,EACT3G,KAAK,QACL0G,OAAO,SACP1I,QAAQ,WAVZ,UAYI,cAAC,IAAD,CAAUwC,MAAM,iBAAhB,8BACA,cAAC,IAAD,CAAUA,MAAM,UAAhB,gCAKhB,eAAC,IAAD,CAAM6F,WAAS,EAACC,QAAS,EAAGP,MAAO,CAAEE,aAAc,IAAnD,UACI,cAAC,IAAD,CAAMM,MAAI,EAACC,GAAIvF,EAAc,GAAK,EAAlC,SACI,eAAC,IAAD,CAAO6E,UAAW,EAAGC,MAAO,CAAEC,QAAS,IAAvC,UACI,cAAC,IAAD,CAAYxH,MAAOP,EAAMQ,QAAQyH,UAAUC,KAAMC,cAAY,EAACpI,QAASiD,EAAc,KAAO,KAA5F,kCAGA,eAAC,IAAD,CAAMoF,WAAS,EAACC,QAASrF,EAAc,EAAI,EAA3C,UACI,cAAC,IAAD,CAAMsF,MAAI,EAACC,GAAI,GAAIM,GAAI,EAAvB,SACI,cAAC,IAAD,CACIH,WAAS,EACTC,MAAM,aACNF,OAAO,SACPnJ,KAAK,YACLiD,MAAOgB,EACPsD,KAAK,OACL9E,KAAK,QACL+D,SAAUG,GACV6C,aAAa,OAGrB,cAAC,IAAD,CAAMR,MAAI,EAACC,GAAI,GAAIM,GAAI,EAAvB,SACI,cAAC,IAAD,CACIH,WAAS,EACTC,MAAM,YACNF,OAAO,SACPnJ,KAAK,WACLiD,MAAOiB,EACPzB,KAAK,QACL+D,SAAUG,GACVY,KAAK,OACLiC,aAAa,OAGrB,cAAC,IAAD,CAAMR,MAAI,EAACC,GAAI,GAAIM,GAAI,EAAvB,SACI,cAAC,IAAD,CACIL,GAAG,kCACHjH,UAAU,WACVoH,MAAM,UACNI,WAAS,EACTL,WAAS,EACTD,OAAO,SACPO,KAAM,EACNjH,KAAK,QACLzC,KAAK,UACLiD,MAAOkB,EACPqC,SAAUG,GACVlG,QAAQ,eAGhB,cAAC,IAAD,CAAMuI,MAAI,EAACC,GAAI,GAAIM,GAAI,EAAvB,SACI,cAAC,IAAD,CACItH,UAAU,WACViH,GAAG,kCACHG,MAAM,uBACNI,WAAS,EACTL,WAAS,EACTD,OAAO,SACPO,KAAM,EACN1J,KAAK,kBACLiD,MAAOmB,EACPoC,SAAUG,GACVlE,KAAK,QACLhC,QAAQ,kBAIpB,cAAC,IAAD,CACIyI,GAAG,wBACHC,OAAO,SACP1G,KAAK,QACLzC,KAAK,UACLiD,MAAOjE,EAEPwH,SAAU,SAACC,GACPE,GAAwBF,GACM,IAA1BA,EAAEC,OAAOzD,MAAM0G,QAvMpB,SAACC,GAC5B,IACIC,MAAM,wCAAD,OAAyCD,IACzCE,MAAK,SAACzC,GAAD,OAAcA,EAAS0C,UAC5BD,MAAK,SAAC5L,GACHuG,EAAmB,2BACZD,GADW,IAEdxF,QAAS4K,EACTvF,MAAOnG,EAAK,GAAG8L,WAAW,GAAGC,MAC7B3F,KAAMpG,EAAK,GAAG8L,WAAW,GAAGE,eAG1C,MAAOvC,GACLD,QAAQC,MAAMA,IA2LcwC,CAAuB1D,EAAEC,OAAOzD,QAGxCmG,WAAS,EACTC,MAAM,WACN5I,QAAQ,aAEZ,eAAC,IAAD,CAAMqI,WAAS,EAACC,QAASrF,EAAc,EAAI,EAA3C,UACI,cAAC,IAAD,CAAMsF,MAAI,EAACC,GAAI,GAAIM,GAAI,EAAvB,SACI,cAAC,IAAD,CACItH,UAAU,WACViH,GAAG,sBACHzG,KAAK,QACL0G,OAAO,SACPnJ,KAAK,OACLiD,MAAOqB,EACPkC,SAAUG,GACVyC,WAAS,EACTC,MAAM,OACN5I,QAAQ,eAGhB,cAAC,IAAD,CAAMuI,MAAI,EAACC,GAAI,GAAIM,GAAI,EAAvB,SACI,cAAC,IAAD,CACItH,UAAU,WACViH,GAAG,uBACHzG,KAAK,QACL0G,OAAO,SACPnJ,KAAK,QACLiD,MAAOoB,EACPmC,SAAUG,GACVyC,WAAS,EACTC,MAAM,QACN5I,QAAQ,kBAIpB,cAAC,IAAD,CACIyI,GAAG,yBACHC,OAAO,SACP1G,KAAK,QACL8E,KAAK,MACLI,MAAOrB,GAASJ,WAChBkD,WAAS,EACTC,MAAM,QACNrJ,KAAK,UACLiD,MAAOsB,EACPiC,SAAU,SAACC,GACPE,GAAwBF,GACnByB,GAAiBkC,KAAK3D,EAAEC,OAAOzD,OAEzBwD,EAAEC,OAAOzD,MAAM0G,OAAS,GAC/BpD,GAAY,CAAEL,WAAY,8BAE1BK,GAAY,IAJZA,GAAY,CAAEL,WAAY,wBAQlCzF,QAAQ,WACR4J,WAAY,CACRC,eAAgB,cAAC,IAAD,CAAgB/J,SAAS,QAAzB,kBAEpBgK,WAAYjE,GAASJ,kBAIjC,cAAC,IAAD,CAAM8C,MAAI,EAACC,GAAIvF,EAAc,GAAK,EAAlC,SACI,eAAC,IAAD,CAAO6E,UAAW,EAAGC,MAAO,CAAEC,QAAS,IAAvC,UACI,cAAC,IAAD,CAAYxH,MAAOP,EAAMQ,QAAQyH,UAAUC,KAAMC,cAAY,EAACpI,QAASiD,EAAc,KAAO,KAA5F,iCAGA,cAAC,IAAD,CAAUkE,QAASA,GAASpB,SAnO1B,SAACgE,GACvB,IAA6B,IAAzBA,EAAM9D,OAAOkB,QAAkB,CAC/BC,IAAW,GACX,IAAM4C,EAAW,CACb/F,WAAYF,EAAgBP,UAC5BU,UAAWH,EAAgBN,SAC3BU,SAAUJ,EAAgBL,QAC1BU,iBAAkBL,EAAgBJ,gBAClCU,SAAUN,EAAgBxF,QAC1B+F,OAAQP,EAAgBH,MACxBW,MAAOR,EAAgBF,KACvBW,SAAUT,EAAgBD,SAE9BY,EAAkBsF,QAElB5C,IAAW,GACX1C,EAAkB,CACdT,WAAY,GACZC,UAAW,GACXC,SAAU,GACVC,iBAAkB,GAClBC,SAAU,GACVC,OAAQ,GACRC,MAAO,GACPC,SAAU,MA2M2DyF,WAAY,CAAE,aAAc,yBACrF,cAAC,IAAD,CAAYjK,QAAQ,UAAUkK,SAAS,OAAOC,UAAWlH,EAAc,SAAW,UAAlF,sCAIA,eAAC,IAAD,CAAMoF,WAAS,EAACC,QAASrF,EAAc,EAAI,EAA3C,UACI,cAAC,IAAD,CAAMsF,MAAI,EAACC,GAAI,GAAIM,GAAI,EAAvB,SACI,cAAC,IAAD,CACIH,WAAS,EACTC,MAAM,aACNF,OAAO,SACPnJ,KAAK,aACLiD,MAAOyB,EACP6C,KAAK,OACL9E,KAAK,QACL+D,SAAUI,GACV4C,aAAa,OAGrB,cAAC,IAAD,CAAMR,MAAI,EAACC,GAAI,GAAIM,GAAI,EAAvB,SACI,cAAC,IAAD,CACIH,WAAS,EACTC,MAAM,YACNF,OAAO,SACPnJ,KAAK,YACLiD,MAAO0B,EACPlC,KAAK,QACL+D,SAAUI,GACVW,KAAK,OACLiC,aAAa,OAGrB,cAAC,IAAD,CAAMR,MAAI,EAACC,GAAI,GAAIM,GAAI,EAAvB,SACI,cAAC,IAAD,CACIL,GAAG,mCACHjH,UAAU,WACVoH,MAAM,UACNI,WAAS,EACTL,WAAS,EACTD,OAAO,SACPO,KAAM,EACNjH,KAAK,QACLzC,KAAK,WACLiD,MAAO2B,EACP4B,SAAUI,GACVnG,QAAQ,eAGhB,cAAC,IAAD,CAAMuI,MAAI,EAACC,GAAI,GAAIM,GAAI,EAAvB,SACI,cAAC,IAAD,CACItH,UAAU,WACViH,GAAG,mCACHG,MAAM,uBACNI,WAAS,EACTL,WAAS,EACTD,OAAO,SACPO,KAAM,EACN1J,KAAK,mBACLiD,MAAO4B,EACP2B,SAAUI,GACVnE,KAAK,QACLhC,QAAQ,kBAIpB,cAAC,IAAD,CACIyI,GAAG,0BACHC,OAAO,SACP1G,KAAK,QACLzC,KAAK,WACLiD,MAAO6B,GACP0B,SAAUI,GACVwC,WAAS,EACTC,MAAM,WACN5I,QAAQ,aAEZ,eAAC,IAAD,CAAMqI,WAAS,EAACC,QAASrF,EAAc,EAAI,EAA3C,UACI,cAAC,IAAD,CAAMsF,MAAI,EAACC,GAAI,GAAIM,GAAI,EAAvB,SACI,cAAC,IAAD,CACItH,UAAU,WACViH,GAAG,uBACHzG,KAAK,QACL0G,OAAO,SACPnJ,KAAK,QACLiD,MAAO+B,GACPwB,SAAUI,GACVwC,WAAS,EACTC,MAAM,OACN5I,QAAQ,eAGhB,cAAC,IAAD,CAAMuI,MAAI,EAACC,GAAI,GAAIM,GAAI,EAAvB,SACI,cAAC,IAAD,CACItH,UAAU,WACViH,GAAG,wBACHzG,KAAK,QACL0G,OAAO,SACPnJ,KAAK,SACLiD,MAAO8B,GACPyB,SAAUI,GACVwC,WAAS,EACTC,MAAM,QACN5I,QAAQ,kBAIpB,cAAC,IAAD,CACIyI,GAAG,wBACHC,OAAO,SACP1G,KAAK,QACL2G,WAAS,EACTC,MAAM,QACNrJ,KAAK,WACLiD,MAAOgC,GACP0C,MAAOrB,GAASH,YAEhBK,SAAU,SAACC,GACPG,GAAuBH,GAClByB,GAAiBkC,KAAK3D,EAAEC,OAAOzD,OAEzBwD,EAAEC,OAAOzD,MAAM0G,OAAS,GAC/BpD,GAAY,CAAEJ,YAAa,8BAE3BI,GAAY,IAJZA,GAAY,CAAEJ,YAAa,wBAOnC1F,QAAQ,WACR4J,WAAY,CACRC,eAAgB,cAAC,IAAD,CAAgB/J,SAAS,QAAzB,kBAEpBgK,WAAYjE,GAASH,sBAMrC,cAAC,IAAD,CAAM2C,WAAS,EAACC,QAAS,EAAGP,MAAO,CAAEE,aAAc,IAAnD,SACI,cAAC,IAAD,CAAMM,MAAI,EAACC,GAAI,GAAf,SACI,eAAC,IAAD,CAAOV,UAAW,EAAlB,UACI,cAAC,IAAD,CAAQ9H,QAAQ,YAAY+H,MAAO,CAAEqC,WAAY,UAAW1B,OAAQ,GAAI2B,MAAO,SAAWC,QAvalG,WACZ,IAAMrB,EAAI,YAAOjE,IACXuF,EAAYvF,GAAcwF,MAChCvB,EAAKwB,KAAK,CACN9F,IAAK4F,EAAU5F,IAAM,EACrBC,QAAS,GACTC,SAAU,EACVC,OAAQ,EACRC,QAAS,KAEbE,GAAiBgE,IA6ZG,qBAGA,cAAC,IAAD,CAAgBxH,UAAWiJ,IAA3B,SACI,eAAC,IAAD,CAAO,YAAU,mBAAjB,UACI,cAAC,IAAD,UACI,eAAC,IAAD,WACI,cAAC,IAAD,CAAWC,MAAM,SAAjB,sBACA,cAAC,IAAD,CAAWA,MAAM,SAAjB,sBACA,cAAC,IAAD,CAAWA,MAAM,SAAjB,4BACA,cAAC,IAAD,CAAWA,MAAM,SAAjB,+BACA,cAAC,IAAD,CAAWA,MAAM,SAAjB,yBAGR,cAAC,IAAD,iBACK3F,SADL,IACKA,QADL,EACKA,GAAeuC,KAAI,SAACqD,EAAKC,GAAN,OAChB,eAAC,IAAD,WACI,cAAC,IAAD,UACI,cAAC,IAAD,CACIpC,GAAG,yBACHC,OAAO,SACP1G,KAAK,QACLzC,KAAK,UACLwG,SAAU,SAACC,GAAD,OAAOqB,GAAarB,EAAG4E,EAAIjG,MACrCnC,MAAOoI,EAAIhG,QACX+D,WAAS,EACTC,MAAM,eACN5I,QAAQ,eAGhB,cAAC,IAAD,CAAW2K,MAAM,SAAjB,SACI,cAAC,IAAD,CACIlC,GAAG,0BACHC,OAAO,SACP1G,KAAK,QACLzC,KAAK,WAELwG,SAAU,SAACC,GACPqB,GAAarB,EAAG4E,EAAIjG,KACf8C,GAAiBkC,KAAK3D,EAAEC,OAAOzD,OAGhCsD,GAAY,IAFZA,GAAY,CAAEH,QAAS,wBAK/BnD,MAAOoI,EAAI/F,SACX8D,WAAS,EACTC,MAAM,mBACN5I,QAAQ,WACRkH,MAAOrB,GAASF,QAChBmE,WAAYjE,GAASF,YAG7B,cAAC,IAAD,CAAWgF,MAAM,SAAjB,SACI,cAAC,IAAD,CACIlC,GAAG,wBACHC,OAAO,SACP1G,KAAK,QACLzC,KAAK,SAELwG,SAAU,SAACC,GACPqB,GAAarB,EAAG4E,EAAIjG,KACf8C,GAAiBkC,KAAK3D,EAAEC,OAAOzD,OAGhCsD,GAAY,IAFZA,GAAY,CAAEF,QAAS,wBAK/BpD,MAAOoI,EAAI9F,OACX6D,WAAS,EACTC,MAAM,SACN5I,QAAQ,WACRkH,MAAOrB,GAASD,QAChBkE,WAAYjE,GAASD,YAG7B,cAAC,IAAD,CAAW+E,MAAM,SAAjB,SACI,cAAC,IAAD,CACIlC,GAAG,yBACHC,OAAO,SACP1G,KAAK,QACLzC,KAAK,UACLwG,SAAU,SAACC,GAAD,OAAOqB,GAAarB,EAAG4E,EAAIjG,MACrCnC,MAAOoI,EAAI7F,QACX4D,WAAS,EACTC,MAAM,MACN5I,QAAQ,eAGhB,cAAC,IAAD,UAC8B,IAAzBgF,GAAckE,QAAsB,IAAN2B,EAC3B,cAAC,IAAD,CAAYC,UAAQ,EAAC,aAAW,iBAAiBtK,MAAM,UAAvD,SACI,cAAC,IAAD,MAGJ,cAAC,IAAD,CACI8J,QAAS,kBAze5C,SAACS,GAClB,IAAMC,EAAYhG,GAAciG,QAAO,SAAC1C,GAAD,OAAUA,EAAK5D,MAAQoG,KAC9D9F,GAAiB+F,GAuekDE,CAAaN,EAAIjG,MAChC,aAAW,iBACXnE,MAAM,QAHV,SAKI,cAAC,IAAD,UApFDqK,oBAiG3C,cAAC,IAAD,CAAMxC,WAAS,EAACC,QAAS,EAAzB,SACI,cAAC,IAAD,CAAMC,MAAI,EAACC,GAAIvF,EAAc,GAAK,EAAlC,SACI,eAAC,IAAD,CAAO6E,UAAW,EAAGC,MAAO,CAAEC,QAAS,IAAvC,UACI,cAAC,IAAD,CACIS,GAAG,wBACHC,OAAO,SACP1G,KAAK,QACLzC,KAAK,WACLiD,MAAO2C,GACPY,SAAUA,GACV4C,WAAS,EACTC,MAAM,iBACN5I,QAAQ,aAEZ,cAAC,IAAD,CACIyI,GAAG,uBACHC,OAAO,SACP1G,KAAK,QACLzC,KAAK,aACLiD,MAAO4C,GACPW,SAAUA,GACV6C,MAAM,KACN5I,QAAQ,WACR+H,MAAO,CAAEF,MAAO,MAAO9G,YAAa,UAExC,cAAC,IAAD,CACI0H,GAAG,uBACHC,OAAO,SACP1G,KAAK,QACLzC,KAAK,aACLiD,MAAO6C,GACPU,SAAUA,GACV6C,MAAM,KACN5I,QAAQ,WACR+H,MAAO,CAAEF,MAAO,MAAO9G,YAAa,UAExC,cAAC,IAAD,CACI0H,GAAG,uBACHC,OAAO,SACP1G,KAAK,QACLzC,KAAK,aACLiD,MAAO8C,GACPS,SAAUA,GACV6C,MAAM,KACN5I,QAAQ,WACR+H,MAAO,CAAEF,MAAO,MAAOI,aAAc,MAEzC,cAAC,IAAD,CAAQjI,QAAQ,YAAYQ,MAAM,UAAUwB,KAAK,QAAQsI,QAAS9D,GAAUuB,MAAO,CAAEhH,YAAa,OAAlG,kBAGA,cAAC,IAAD,CAAQf,QAAQ,YAAYQ,MAAM,QAAQwB,KAAK,QAA/C","file":"static/js/20.d78494a5.chunk.js","sourcesContent":["import axios from 'axios';\nimport Config from '../config/config';\n\nconst Apiurl = Config.apiUrl;\nconst headers = {\n    'Content-Type': 'application/json',\n    'Access-Control-Allow-Origin': '*'\n};\nconst HttpService = {\n    register(data) {\n        return axios.post(`${Apiurl}vendorLogReg/signup`, data);\n    },\n    vendorLogin(data) {\n        return axios.post(`${Apiurl}vendorLogReg/login`, data);\n    },\n    vendorForgotPassword(data) {\n        return axios.post(`${Apiurl}vendorLogReg/forgot-password`, data);\n    },\n    setNewPassword(data) {\n        return axios.post(`${Apiurl}vendorLogReg/set-password`, data);\n    },\n    getVendorProfileDetail() {\n        return axios.get(`${Apiurl}vendorLogReg/loggedVendor`);\n    },\n    vendorProfileUpdate(data) {\n        return axios.put(`${Apiurl}vendors/editVendorProfile`, data);\n    },\n    getAllShippingOrderData() {\n        return axios.get(`${Apiurl}shippingOrders/all`);\n    },\n    getshippingOrderViewDetails(orderid) {\n        return axios.get(`${Apiurl}shippingOrders/getShippingOrderById/${orderid}`);\n    },\n    checkPinCodes(pincode) {\n        return axios.get(`https://api.postalpincode.in/pincode/${pincode}`, { headers });\n    },\n    createShippingOrder(orderData) {\n        return axios.post(`${Apiurl}shippingOrders/new`, orderData);\n    },\n    cloneShippingOrder(orderId) {\n        return axios.put(`${Apiurl}shippingOrders/cloneShippingOrder/${orderId}`);\n    },\n    cancelShippingOrder(orderId) {\n        return axios.put(`${Apiurl}shippingOrders/cancelShippingOrder/${orderId}`);\n    },\n    updateShippingOrder(orderId, orderData) {\n        return axios.put(`${Apiurl}shippingOrders/editShippingOrder/${orderId}`, orderData);\n    }\n};\n\nexport default HttpService;\n","const dev = {\n    apiUrl: 'https://ysosy-backend.herokuapp.com/api/',\n    aadharTestRequest: 'https://test.zoop.one/in/identity/okyc/otp/request',\n    aadharLiveRequest: 'https://live.zoop.one/in/identity/okyc/otp/request',\n    aadharOtpVerifyRequest: 'https://test.zoop.one/in/identity/okyc/otp/verify'\n};\n\nconst test = {\n    apiUrl: 'https://ysosy-backend.herokuapp.com/api/',\n    aadharTestRequest: 'https://test.zoop.one/in/identity/okyc/otp/request',\n    aadharLiveRequest: 'https://live.zoop.one/in/identity/okyc/otp/request',\n    aadharOtpVerifyRequest: 'https://test.zoop.one/in/identity/okyc/otp/verify'\n};\n\nconst prod = {\n    apiUrl: 'https://ysosy-backend.herokuapp.com/api/'\n};\n\n// const config = process.env.REACT_APP_STAGE === 'test' ? test : dev;\n\n// eslint-disable-next-line no-nested-ternary\nconst config = process.env.REACT_APP_STAGE === 'production' ? prod : process.env.REACT_APP_STAGE === 'test' ? test : dev;\nexport default config;\n","import { generateUtilityClass, generateUtilityClasses } from '@mui/base';\nexport function getInputAdornmentUtilityClass(slot) {\n  return generateUtilityClass('MuiInputAdornment', slot);\n}\nconst inputAdornmentClasses = generateUtilityClasses('MuiInputAdornment', ['root', 'filled', 'standard', 'outlined', 'positionStart', 'positionEnd', 'disablePointerEvents', 'hiddenLabel', 'sizeSmall']);\nexport default inputAdornmentClasses;","import _objectWithoutPropertiesLoose from \"@babel/runtime/helpers/esm/objectWithoutPropertiesLoose\";\nimport _extends from \"@babel/runtime/helpers/esm/extends\";\n\nvar _span;\n\nconst _excluded = [\"children\", \"className\", \"component\", \"disablePointerEvents\", \"disableTypography\", \"position\", \"variant\"];\nimport * as React from 'react';\nimport PropTypes from 'prop-types';\nimport clsx from 'clsx';\nimport { unstable_composeClasses as composeClasses } from '@mui/base';\nimport capitalize from '../utils/capitalize';\nimport Typography from '../Typography';\nimport FormControlContext from '../FormControl/FormControlContext';\nimport useFormControl from '../FormControl/useFormControl';\nimport styled from '../styles/styled';\nimport inputAdornmentClasses, { getInputAdornmentUtilityClass } from './inputAdornmentClasses';\nimport useThemeProps from '../styles/useThemeProps';\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nimport { jsxs as _jsxs } from \"react/jsx-runtime\";\n\nconst overridesResolver = (props, styles) => {\n  const {\n    ownerState\n  } = props;\n  return [styles.root, styles[`position${capitalize(ownerState.position)}`], ownerState.disablePointerEvents === true && styles.disablePointerEvents, styles[ownerState.variant]];\n};\n\nconst useUtilityClasses = ownerState => {\n  const {\n    classes,\n    disablePointerEvents,\n    hiddenLabel,\n    position,\n    size,\n    variant\n  } = ownerState;\n  const slots = {\n    root: ['root', disablePointerEvents && 'disablePointerEvents', position && `position${capitalize(position)}`, variant, hiddenLabel && 'hiddenLabel', size && `size${capitalize(size)}`]\n  };\n  return composeClasses(slots, getInputAdornmentUtilityClass, classes);\n};\n\nconst InputAdornmentRoot = styled('div', {\n  name: 'MuiInputAdornment',\n  slot: 'Root',\n  overridesResolver\n})(({\n  theme,\n  ownerState\n}) => _extends({\n  display: 'flex',\n  height: '0.01em',\n  // Fix IE11 flexbox alignment. To remove at some point.\n  maxHeight: '2em',\n  alignItems: 'center',\n  whiteSpace: 'nowrap',\n  color: theme.palette.action.active\n}, ownerState.variant === 'filled' && {\n  // Styles applied to the root element if `variant=\"filled\"`.\n  [`&.${inputAdornmentClasses.positionStart}&:not(.${inputAdornmentClasses.hiddenLabel})`]: {\n    marginTop: 16\n  }\n}, ownerState.position === 'start' && {\n  // Styles applied to the root element if `position=\"start\"`.\n  marginRight: 8\n}, ownerState.position === 'end' && {\n  // Styles applied to the root element if `position=\"end\"`.\n  marginLeft: 8\n}, ownerState.disablePointerEvents === true && {\n  // Styles applied to the root element if `disablePointerEvents={true}`.\n  pointerEvents: 'none'\n}));\nconst InputAdornment = /*#__PURE__*/React.forwardRef(function InputAdornment(inProps, ref) {\n  const props = useThemeProps({\n    props: inProps,\n    name: 'MuiInputAdornment'\n  });\n\n  const {\n    children,\n    className,\n    component = 'div',\n    disablePointerEvents = false,\n    disableTypography = false,\n    position,\n    variant: variantProp\n  } = props,\n        other = _objectWithoutPropertiesLoose(props, _excluded);\n\n  const muiFormControl = useFormControl() || {};\n  let variant = variantProp;\n\n  if (variantProp && muiFormControl.variant) {\n    if (process.env.NODE_ENV !== 'production') {\n      if (variantProp === muiFormControl.variant) {\n        console.error('MUI: The `InputAdornment` variant infers the variant prop ' + 'you do not have to provide one.');\n      }\n    }\n  }\n\n  if (muiFormControl && !variant) {\n    variant = muiFormControl.variant;\n  }\n\n  const ownerState = _extends({}, props, {\n    hiddenLabel: muiFormControl.hiddenLabel,\n    size: muiFormControl.size,\n    disablePointerEvents,\n    position,\n    variant\n  });\n\n  const classes = useUtilityClasses(ownerState);\n  return /*#__PURE__*/_jsx(FormControlContext.Provider, {\n    value: null,\n    children: /*#__PURE__*/_jsx(InputAdornmentRoot, _extends({\n      as: component,\n      ownerState: ownerState,\n      className: clsx(classes.root, className),\n      ref: ref\n    }, other, {\n      children: typeof children === 'string' && !disableTypography ? /*#__PURE__*/_jsx(Typography, {\n        color: \"text.secondary\",\n        children: children\n      }) : /*#__PURE__*/_jsxs(React.Fragment, {\n        children: [position === 'start' ?\n        /* notranslate needed while Google Translate will not fix zero-width space issue */\n        _span || (_span = /*#__PURE__*/_jsx(\"span\", {\n          className: \"notranslate\",\n          children: \"\\u200B\"\n        })) : null, children]\n      })\n    }))\n  });\n});\nprocess.env.NODE_ENV !== \"production\" ? InputAdornment.propTypes\n/* remove-proptypes */\n= {\n  // ----------------------------- Warning --------------------------------\n  // | These PropTypes are generated from the TypeScript type definitions |\n  // |     To update them edit the d.ts file and run \"yarn proptypes\"     |\n  // ----------------------------------------------------------------------\n\n  /**\n   * The content of the component, normally an `IconButton` or string.\n   */\n  children: PropTypes.node,\n\n  /**\n   * Override or extend the styles applied to the component.\n   */\n  classes: PropTypes.object,\n\n  /**\n   * @ignore\n   */\n  className: PropTypes.string,\n\n  /**\n   * The component used for the root node.\n   * Either a string to use a HTML element or a component.\n   */\n  component: PropTypes.elementType,\n\n  /**\n   * Disable pointer events on the root.\n   * This allows for the content of the adornment to focus the `input` on click.\n   * @default false\n   */\n  disablePointerEvents: PropTypes.bool,\n\n  /**\n   * If children is a string then disable wrapping in a Typography component.\n   * @default false\n   */\n  disableTypography: PropTypes.bool,\n\n  /**\n   * The position this adornment should appear relative to the `Input`.\n   */\n  position: PropTypes.oneOf(['end', 'start']).isRequired,\n\n  /**\n   * The system prop that allows defining system overrides as well as additional CSS styles.\n   */\n  sx: PropTypes.oneOfType([PropTypes.arrayOf(PropTypes.oneOfType([PropTypes.func, PropTypes.object, PropTypes.bool])), PropTypes.func, PropTypes.object]),\n\n  /**\n   * The variant to use.\n   * Note: If you are using the `TextField` component or the `FormControl` component\n   * you do not have to set this manually.\n   */\n  variant: PropTypes.oneOf(['filled', 'outlined', 'standard'])\n} : void 0;\nexport default InputAdornment;","import { useState, useEffect } from 'react';\nimport { useNavigate } from 'react-router-dom';\n// project imports\nimport MainCard from 'ui-component/cards/MainCard';\nimport { useTheme } from '@mui/material/styles';\nimport Box from '@mui/material/Box';\nimport Button from '@mui/material/Button';\nimport {\n    Grid,\n    TextField,\n    MenuItem,\n    useMediaQuery,\n    Paper,\n    TableContainer,\n    Table,\n    TableHead,\n    TableBody,\n    TableRow,\n    TableCell,\n    IconButton,\n    Checkbox,\n    Typography,\n    InputAdornment\n} from '@mui/material';\nimport HttpService from 'services/httpService';\nimport DeleteIcon from '@mui/icons-material/Delete';\nimport { notifier } from 'react-toast-notifier';\n// ==============================|| TYPOGRAPHY ||============================== //\n\nconst CreateOrder = () => {\n    const theme = useTheme();\n    const navigate = useNavigate();\n    const matchDownSM = useMediaQuery(theme.breakpoints.down('md'));\n\n    useEffect(() => {\n        // eslint-disable-next-line no-use-before-define\n        getRandomOrderId();\n        // eslint-disable-next-line\n    }, []);\n\n    const [shippingAddress, setShippingAddress] = useState({\n        firstName: '',\n        lastName: '',\n        address: '',\n        addressOptional: '',\n        pincode: '',\n        state: '',\n        city: '',\n        phoneno: ''\n    });\n    const { firstName, lastName, address, addressOptional, pincode, state, city, phoneno } = shippingAddress;\n\n    const [billingAddress, setBillingAddress] = useState({\n        bfirstName: '',\n        blastName: '',\n        baddress: '',\n        baddressOptional: '',\n        bpincode: '',\n        bstate: '',\n        bcity: '',\n        bphoneno: ''\n    });\n    const { bfirstName, blastName, baddress, baddressOptional, bpincode, bstate, bcity, bphoneno } = billingAddress;\n    const [orderProducts, setOrderProducts] = useState([\n        {\n            key: 1,\n            product: '',\n            quantity: 0,\n            amount: 0,\n            skucode: ''\n        }\n    ]);\n    const [OrderValue, setOrderValue] = useState({\n        orderId: '',\n        orderType: '',\n        weightFd: '',\n        dimension1: '',\n        dimension2: '',\n        dimension3: ''\n    });\n    const { orderId, orderType, weightFd, dimension1, dimension2, dimension3 } = OrderValue;\n    const [errorMsg, setErrorMsg] = useState({\n        phoneError: '',\n        bPhoneError: '',\n        prodQty: '',\n        prodAmt: ''\n    });\n\n    const onChange = (e) => {\n        setOrderValue({ ...OrderValue, [e.target.name]: e.target.value });\n    };\n\n    const onChangeShippingAddress = (e) => {\n        setShippingAddress({ ...shippingAddress, [e.target.name]: e.target.value });\n    };\n\n    const onChangeBillingAddress = (e) => {\n        setBillingAddress({ ...billingAddress, [e.target.name]: e.target.value });\n    };\n\n    const getRandomOrderId = () => {\n        const randomOrderId = Math.floor(10000000 + Math.random() * 9000000);\n        setOrderValue({ ...OrderValue, orderId: randomOrderId });\n    };\n\n    const addRows = () => {\n        const rows = [...orderProducts];\n        const lastIndex = orderProducts.pop();\n        rows.push({\n            key: lastIndex.key + 1,\n            product: '',\n            quantity: 0,\n            amount: 0,\n            skucode: ''\n        });\n        setOrderProducts(rows);\n    };\n\n    const checkPinCodeValidation = (pin) => {\n        try {\n            fetch(`https://api.postalpincode.in/pincode/${pin}`)\n                .then((response) => response.json())\n                .then((data) => {\n                    setShippingAddress({\n                        ...shippingAddress,\n                        pincode: pin,\n                        state: data[0].PostOffice[0].State,\n                        city: data[0].PostOffice[0].District\n                    });\n                });\n        } catch (error) {\n            console.error(error);\n        }\n    };\n\n    const handleDelete = (val) => {\n        const filterRow = orderProducts.filter((item) => item.key !== val);\n        setOrderProducts(filterRow);\n    };\n\n    const onSubmit = async () => {\n        const obj = {\n            OrderValue,\n            shippingAddress,\n            billingAddress,\n            products: orderProducts\n        };\n        try {\n            const response = await HttpService.createShippingOrder(obj);\n            notifier({\n                type: 'success',\n                message: response.data,\n                autoDismissTimeout: 5000\n            });\n            navigate('/order-list');\n        } catch (error) {\n            console.error(error);\n        }\n    };\n\n    const [checked, setChecked] = useState(false);\n\n    const handleCheckChange = (event) => {\n        if (event.target.checked === true) {\n            setChecked(true);\n            const billAddr = {\n                bfirstName: shippingAddress.firstName,\n                blastName: shippingAddress.lastName,\n                baddress: shippingAddress.address,\n                baddressOptional: shippingAddress.addressOptional,\n                bpincode: shippingAddress.pincode,\n                bstate: shippingAddress.state,\n                bcity: shippingAddress.city,\n                bphoneno: shippingAddress.phoneno\n            };\n            setBillingAddress(billAddr);\n        } else {\n            setChecked(false);\n            setBillingAddress({\n                bfirstName: '',\n                blastName: '',\n                baddress: '',\n                baddressOptional: '',\n                bpincode: '',\n                bstate: '',\n                bcity: '',\n                bphoneno: ''\n            });\n        }\n    };\n\n    const setOrderData = (e, key) => {\n        const finalProduct = orderProducts.map((ele) => {\n            if (ele.key === key) {\n                ele[e.target.name] = e.target.value;\n            }\n            return ele;\n        });\n        setOrderProducts(finalProduct);\n    };\n\n    const validMobileRegex = RegExp(/^[0-9\\b]+$/);\n    return (\n        <MainCard title=\"Create Order\">\n            <Box sx={{ width: '100%' }}>\n                <Paper elevation={3} style={{ padding: 20, marginBottom: 20 }}>\n                    <Typography color={theme.palette.secondary.main} gutterBottom variant={matchDownSM ? 'h3' : 'h2'}>\n                        Order Information\n                    </Typography>\n                    <Grid container spacing={3}>\n                        <Grid item xs={matchDownSM ? 12 : 6}>\n                            <TextField\n                                id=\"outlined-orderid-basic\"\n                                margin=\"normal\"\n                                size=\"small\"\n                                name=\"orderId\"\n                                value={orderId}\n                                onChange={onChange}\n                                fullWidth\n                                label=\"Order Id\"\n                                variant=\"outlined\"\n                            />\n                        </Grid>\n                        <Grid item xs={matchDownSM ? 12 : 6}>\n                            <TextField\n                                id=\"outlined-select-ordertype\"\n                                select\n                                label=\"Order Type\"\n                                name=\"orderType\"\n                                value={orderType}\n                                onChange={onChange}\n                                fullWidth\n                                size=\"small\"\n                                margin=\"normal\"\n                                variant=\"outlined\"\n                            >\n                                <MenuItem value=\"cashOnDelivery\">Cash on Delivery</MenuItem>\n                                <MenuItem value=\"Prapaid\">Prepaid</MenuItem>\n                            </TextField>\n                        </Grid>\n                    </Grid>\n                </Paper>\n                <Grid container spacing={3} style={{ marginBottom: 20 }}>\n                    <Grid item xs={matchDownSM ? 12 : 6}>\n                        <Paper elevation={3} style={{ padding: 20 }}>\n                            <Typography color={theme.palette.secondary.main} gutterBottom variant={matchDownSM ? 'h3' : 'h2'}>\n                                Shipping Information\n                            </Typography>\n                            <Grid container spacing={matchDownSM ? 0 : 2}>\n                                <Grid item xs={12} sm={6}>\n                                    <TextField\n                                        fullWidth\n                                        label=\"First Name\"\n                                        margin=\"normal\"\n                                        name=\"firstName\"\n                                        value={firstName}\n                                        type=\"text\"\n                                        size=\"small\"\n                                        onChange={onChangeShippingAddress}\n                                        defaultValue=\"\"\n                                    />\n                                </Grid>\n                                <Grid item xs={12} sm={6}>\n                                    <TextField\n                                        fullWidth\n                                        label=\"Last Name\"\n                                        margin=\"normal\"\n                                        name=\"lastName\"\n                                        value={lastName}\n                                        size=\"small\"\n                                        onChange={onChangeShippingAddress}\n                                        type=\"text\"\n                                        defaultValue=\"\"\n                                    />\n                                </Grid>\n                                <Grid item xs={12} sm={6}>\n                                    <TextField\n                                        id=\"outlined-multiline-addr1-static\"\n                                        className=\"address1\"\n                                        label=\"Address\"\n                                        multiline\n                                        fullWidth\n                                        margin=\"normal\"\n                                        rows={3}\n                                        size=\"small\"\n                                        name=\"address\"\n                                        value={address}\n                                        onChange={onChangeShippingAddress}\n                                        variant=\"outlined\"\n                                    />\n                                </Grid>\n                                <Grid item xs={12} sm={6}>\n                                    <TextField\n                                        className=\"address2\"\n                                        id=\"outlined-multiline-addr2-static\"\n                                        label=\"Address 2 (Optional)\"\n                                        multiline\n                                        fullWidth\n                                        margin=\"normal\"\n                                        rows={3}\n                                        name=\"addressOptional\"\n                                        value={addressOptional}\n                                        onChange={onChangeShippingAddress}\n                                        size=\"small\"\n                                        variant=\"outlined\"\n                                    />\n                                </Grid>\n                            </Grid>\n                            <TextField\n                                id=\"outlined-picode-basic\"\n                                margin=\"normal\"\n                                size=\"small\"\n                                name=\"pincode\"\n                                value={pincode}\n                                // onChange={(e) => checkPinCodeValidation(e.target.value)}\n                                onChange={(e) => {\n                                    onChangeShippingAddress(e);\n                                    if (e.target.value.length === 6) {\n                                        checkPinCodeValidation(e.target.value);\n                                    }\n                                }}\n                                fullWidth\n                                label=\"Pin Code\"\n                                variant=\"outlined\"\n                            />\n                            <Grid container spacing={matchDownSM ? 0 : 2}>\n                                <Grid item xs={12} sm={6}>\n                                    <TextField\n                                        className=\"address1\"\n                                        id=\"outlined-city-basic\"\n                                        size=\"small\"\n                                        margin=\"normal\"\n                                        name=\"city\"\n                                        value={city}\n                                        onChange={onChangeShippingAddress}\n                                        fullWidth\n                                        label=\"City\"\n                                        variant=\"outlined\"\n                                    />\n                                </Grid>\n                                <Grid item xs={12} sm={6}>\n                                    <TextField\n                                        className=\"address2\"\n                                        id=\"outlined-state-basic\"\n                                        size=\"small\"\n                                        margin=\"normal\"\n                                        name=\"state\"\n                                        value={state}\n                                        onChange={onChangeShippingAddress}\n                                        fullWidth\n                                        label=\"State\"\n                                        variant=\"outlined\"\n                                    />\n                                </Grid>\n                            </Grid>\n                            <TextField\n                                id=\"outlined-phoneno-basic\"\n                                margin=\"normal\"\n                                size=\"small\"\n                                type=\"tel\"\n                                error={errorMsg.phoneError}\n                                fullWidth\n                                label=\"Phone\"\n                                name=\"phoneno\"\n                                value={phoneno}\n                                onChange={(e) => {\n                                    onChangeShippingAddress(e);\n                                    if (!validMobileRegex.test(e.target.value)) {\n                                        setErrorMsg({ phoneError: 'Enter only numbers' });\n                                    } else if (e.target.value.length > 10) {\n                                        setErrorMsg({ phoneError: 'Enter valid mobile number' });\n                                    } else {\n                                        setErrorMsg('');\n                                    }\n                                }}\n                                // onChange={onChangeShippingAddress}\n                                variant=\"outlined\"\n                                InputProps={{\n                                    startAdornment: <InputAdornment position=\"start\">+91</InputAdornment>\n                                }}\n                                helperText={errorMsg.phoneError}\n                            />\n                        </Paper>\n                    </Grid>\n                    <Grid item xs={matchDownSM ? 12 : 6}>\n                        <Paper elevation={3} style={{ padding: 20 }}>\n                            <Typography color={theme.palette.secondary.main} gutterBottom variant={matchDownSM ? 'h3' : 'h2'}>\n                                Billing Information\n                            </Typography>\n                            <Checkbox checked={checked} onChange={handleCheckChange} inputProps={{ 'aria-label': 'select all desserts' }} />\n                            <Typography variant=\"caption\" fontSize=\"16px\" textAlign={matchDownSM ? 'center' : 'inherit'}>\n                                Same as Shipping Address\n                            </Typography>\n                            {/* <h5 style={{ display: 'inline-block' }}>Same as Shipping Address</h5> */}\n                            <Grid container spacing={matchDownSM ? 0 : 2}>\n                                <Grid item xs={12} sm={6}>\n                                    <TextField\n                                        fullWidth\n                                        label=\"First Name\"\n                                        margin=\"normal\"\n                                        name=\"bfirstName\"\n                                        value={bfirstName}\n                                        type=\"text\"\n                                        size=\"small\"\n                                        onChange={onChangeBillingAddress}\n                                        defaultValue=\"\"\n                                    />\n                                </Grid>\n                                <Grid item xs={12} sm={6}>\n                                    <TextField\n                                        fullWidth\n                                        label=\"Last Name\"\n                                        margin=\"normal\"\n                                        name=\"blastName\"\n                                        value={blastName}\n                                        size=\"small\"\n                                        onChange={onChangeBillingAddress}\n                                        type=\"text\"\n                                        defaultValue=\"\"\n                                    />\n                                </Grid>\n                                <Grid item xs={12} sm={6}>\n                                    <TextField\n                                        id=\"outlined-multiline-baddr1-static\"\n                                        className=\"address1\"\n                                        label=\"Address\"\n                                        multiline\n                                        fullWidth\n                                        margin=\"normal\"\n                                        rows={3}\n                                        size=\"small\"\n                                        name=\"baddress\"\n                                        value={baddress}\n                                        onChange={onChangeBillingAddress}\n                                        variant=\"outlined\"\n                                    />\n                                </Grid>\n                                <Grid item xs={12} sm={6}>\n                                    <TextField\n                                        className=\"address2\"\n                                        id=\"outlined-multiline-baddr2-static\"\n                                        label=\"Address 2 (Optional)\"\n                                        multiline\n                                        fullWidth\n                                        margin=\"normal\"\n                                        rows={3}\n                                        name=\"baddressOptional\"\n                                        value={baddressOptional}\n                                        onChange={onChangeBillingAddress}\n                                        size=\"small\"\n                                        variant=\"outlined\"\n                                    />\n                                </Grid>\n                            </Grid>\n                            <TextField\n                                id=\"outlined-bpincode-basic\"\n                                margin=\"normal\"\n                                size=\"small\"\n                                name=\"bpincode\"\n                                value={bpincode}\n                                onChange={onChangeBillingAddress}\n                                fullWidth\n                                label=\"Pin Code\"\n                                variant=\"outlined\"\n                            />\n                            <Grid container spacing={matchDownSM ? 0 : 2}>\n                                <Grid item xs={12} sm={6}>\n                                    <TextField\n                                        className=\"address1\"\n                                        id=\"outlined-bcity-basic\"\n                                        size=\"small\"\n                                        margin=\"normal\"\n                                        name=\"bcity\"\n                                        value={bcity}\n                                        onChange={onChangeBillingAddress}\n                                        fullWidth\n                                        label=\"City\"\n                                        variant=\"outlined\"\n                                    />\n                                </Grid>\n                                <Grid item xs={12} sm={6}>\n                                    <TextField\n                                        className=\"address2\"\n                                        id=\"outlined-bstate-basic\"\n                                        size=\"small\"\n                                        margin=\"normal\"\n                                        name=\"bstate\"\n                                        value={bstate}\n                                        onChange={onChangeBillingAddress}\n                                        fullWidth\n                                        label=\"State\"\n                                        variant=\"outlined\"\n                                    />\n                                </Grid>\n                            </Grid>\n                            <TextField\n                                id=\"outlined-bphone-basic\"\n                                margin=\"normal\"\n                                size=\"small\"\n                                fullWidth\n                                label=\"Phone\"\n                                name=\"bphoneno\"\n                                value={bphoneno}\n                                error={errorMsg.bPhoneError}\n                                // onChange={onChangeBillingAddress}\n                                onChange={(e) => {\n                                    onChangeBillingAddress(e);\n                                    if (!validMobileRegex.test(e.target.value)) {\n                                        setErrorMsg({ bPhoneError: 'Enter only numbers' });\n                                    } else if (e.target.value.length > 10) {\n                                        setErrorMsg({ bPhoneError: 'Enter valid mobile number' });\n                                    } else {\n                                        setErrorMsg('');\n                                    }\n                                }}\n                                variant=\"outlined\"\n                                InputProps={{\n                                    startAdornment: <InputAdornment position=\"start\">+91</InputAdornment>\n                                }}\n                                helperText={errorMsg.bPhoneError}\n                            />\n                        </Paper>\n                    </Grid>\n                </Grid>\n\n                <Grid container spacing={3} style={{ marginBottom: 20 }}>\n                    <Grid item xs={12}>\n                        <Paper elevation={3}>\n                            <Button variant=\"contained\" style={{ background: '#716ACA', margin: 15, float: 'right' }} onClick={addRows}>\n                                Add Row\n                            </Button>\n                            <TableContainer component={Paper}>\n                                <Table ria-label=\"customized table\">\n                                    <TableHead>\n                                        <TableRow>\n                                            <TableCell align=\"center\">Products</TableCell>\n                                            <TableCell align=\"center\">Quantity</TableCell>\n                                            <TableCell align=\"center\">Amount&nbsp;(Rs)</TableCell>\n                                            <TableCell align=\"center\">SKU&nbsp;(Optional)</TableCell>\n                                            <TableCell align=\"center\">Action</TableCell>\n                                        </TableRow>\n                                    </TableHead>\n                                    <TableBody>\n                                        {orderProducts?.map((row, i) => (\n                                            <TableRow key={i}>\n                                                <TableCell>\n                                                    <TextField\n                                                        id=\"outlined-product-basic\"\n                                                        margin=\"normal\"\n                                                        size=\"small\"\n                                                        name=\"product\"\n                                                        onChange={(e) => setOrderData(e, row.key)}\n                                                        value={row.product}\n                                                        fullWidth\n                                                        label=\"Product Name\"\n                                                        variant=\"outlined\"\n                                                    />\n                                                </TableCell>\n                                                <TableCell align=\"center\">\n                                                    <TextField\n                                                        id=\"outlined-quantity-basic\"\n                                                        margin=\"normal\"\n                                                        size=\"small\"\n                                                        name=\"quantity\"\n                                                        // onChange={(e) => setOrderData(e, row.key)}\n                                                        onChange={(e) => {\n                                                            setOrderData(e, row.key);\n                                                            if (!validMobileRegex.test(e.target.value)) {\n                                                                setErrorMsg({ prodQty: 'Enter only numbers' });\n                                                            } else {\n                                                                setErrorMsg('');\n                                                            }\n                                                        }}\n                                                        value={row.quantity}\n                                                        fullWidth\n                                                        label=\"Product Quantity\"\n                                                        variant=\"outlined\"\n                                                        error={errorMsg.prodQty}\n                                                        helperText={errorMsg.prodQty}\n                                                    />\n                                                </TableCell>\n                                                <TableCell align=\"center\">\n                                                    <TextField\n                                                        id=\"outlined-amount-basic\"\n                                                        margin=\"normal\"\n                                                        size=\"small\"\n                                                        name=\"amount\"\n                                                        // onChange={(e) => setOrderData(e, row.key)}\n                                                        onChange={(e) => {\n                                                            setOrderData(e, row.key);\n                                                            if (!validMobileRegex.test(e.target.value)) {\n                                                                setErrorMsg({ prodAmt: 'Enter only numbers' });\n                                                            } else {\n                                                                setErrorMsg('');\n                                                            }\n                                                        }}\n                                                        value={row.amount}\n                                                        fullWidth\n                                                        label=\"Amount\"\n                                                        variant=\"outlined\"\n                                                        error={errorMsg.prodAmt}\n                                                        helperText={errorMsg.prodAmt}\n                                                    />\n                                                </TableCell>\n                                                <TableCell align=\"center\">\n                                                    <TextField\n                                                        id=\"outlined-skucode-basic\"\n                                                        margin=\"normal\"\n                                                        size=\"small\"\n                                                        name=\"skucode\"\n                                                        onChange={(e) => setOrderData(e, row.key)}\n                                                        value={row.skucode}\n                                                        fullWidth\n                                                        label=\"SKU\"\n                                                        variant=\"outlined\"\n                                                    />\n                                                </TableCell>\n                                                <TableCell>\n                                                    {orderProducts.length === 1 || i === 0 ? (\n                                                        <IconButton disabled aria-label=\"Delete Product\" color=\"primary\">\n                                                            <DeleteIcon />\n                                                        </IconButton>\n                                                    ) : (\n                                                        <IconButton\n                                                            onClick={() => handleDelete(row.key)}\n                                                            aria-label=\"Delete Product\"\n                                                            color=\"error\"\n                                                        >\n                                                            <DeleteIcon />\n                                                        </IconButton>\n                                                    )}\n                                                </TableCell>\n                                            </TableRow>\n                                        ))}\n                                    </TableBody>\n                                </Table>\n                            </TableContainer>\n                        </Paper>\n                    </Grid>\n                </Grid>\n\n                <Grid container spacing={3}>\n                    <Grid item xs={matchDownSM ? 12 : 6}>\n                        <Paper elevation={3} style={{ padding: 20 }}>\n                            <TextField\n                                id=\"outlined-weight-basic\"\n                                margin=\"normal\"\n                                size=\"small\"\n                                name=\"weightFd\"\n                                value={weightFd}\n                                onChange={onChange}\n                                fullWidth\n                                label=\"Weight in gram\"\n                                variant=\"outlined\"\n                            />\n                            <TextField\n                                id=\"outlined-dime1-basic\"\n                                margin=\"normal\"\n                                size=\"small\"\n                                name=\"dimension1\"\n                                value={dimension1}\n                                onChange={onChange}\n                                label=\"CM\"\n                                variant=\"outlined\"\n                                style={{ width: '30%', marginRight: '10px' }}\n                            />\n                            <TextField\n                                id=\"outlined-dime2-basic\"\n                                margin=\"normal\"\n                                size=\"small\"\n                                name=\"dimension2\"\n                                value={dimension2}\n                                onChange={onChange}\n                                label=\"CM\"\n                                variant=\"outlined\"\n                                style={{ width: '30%', marginRight: '10px' }}\n                            />\n                            <TextField\n                                id=\"outlined-dime3-basic\"\n                                margin=\"normal\"\n                                size=\"small\"\n                                name=\"dimension3\"\n                                value={dimension3}\n                                onChange={onChange}\n                                label=\"CM\"\n                                variant=\"outlined\"\n                                style={{ width: '30%', marginBottom: 20 }}\n                            />\n                            <Button variant=\"contained\" color=\"success\" size=\"small\" onClick={onSubmit} style={{ marginRight: '5px' }}>\n                                Save\n                            </Button>\n                            <Button variant=\"contained\" color=\"error\" size=\"small\">\n                                Cancel\n                            </Button>\n                        </Paper>\n                    </Grid>\n                </Grid>\n            </Box>\n        </MainCard>\n    );\n};\nexport default CreateOrder;\n"],"sourceRoot":""}