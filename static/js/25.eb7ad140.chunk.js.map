{"version":3,"sources":["services/httpService.js","config/config.js","views/weightReco/manage-catalogue.js"],"names":["Apiurl","process","REACT_APP_STAGE","apiUrl","aadharTestRequest","aadharLiveRequest","aadharOtpVerifyRequest","headers","HttpService","register","data","axios","post","vendorLogin","vendorForgotPassword","setNewPassword","getVendorProfileDetail","get","vendorProfileUpdate","put","getAllShippingOrderData","getshippingOrderViewDetails","orderid","checkPinCodes","pincode","createShippingOrder","orderData","cloneShippingOrder","orderId","cancelShippingOrder","updateShippingOrder","ManageCatalogus","theme","useTheme","navigate","useNavigate","useState","setOrderData","dupOrderData","setDupOrderData","dupShipOrderData","setShipDupOrderData","qtyValue","setQtyValue","selected","setSelected","setCsvData","processBulkOrder","setProcessBulkOrder","fromDate","setFromDate","setOrderId","searchQuery","setSearchQuery","awbNo","setAwbNo","productName","setProductName","channel","setChannel","method","setMethod","type","setType","courier","setCourier","attempts","setAttempts","tagName","setTagName","isFilter","setIsFilter","useMediaQuery","breakpoints","down","useEffect","getShippingOrderList","a","result","orderDataList","prodTotal","forEach","ele","prodNames","totalPayment","orderProducts","push","product","quantity","Number","amount","reduce","b","date","moment","createdAt","format","join","payment","orderType","customer","shippingAddress","firstName","lastName","zipcode","weight","weightFd","ivrStatus","ivr_status","tags","status","_id","getStatusAvailableQuantity","console","error","notifier","message","autoDismissTimeout","qtyValues","all","length","booked","filter","ship","pendingpickup","intransit","outfordelivery","Delivered","Cancelled","filterOrder","filterOption","isShowing","setIsShowing","scroll","setScroll","selectedOrderId","setSelectedOrderId","pickUpWarehouseAddress","id","name","isDefault","pickUpRTOWarehouseAddress","wareHousePickupAddress","rtoWareHouseAddress","essentialItem","dangerousGood","courierPartner","shipProcessForm","setShipProcessForm","checkDefaultAddress","getDefaultPickUPAddr","getDefaultRTOAddr","courierPartners","checkedCheckBox","e","target","checked","title","sx","width","style","marginBottom","float","variant","onClick","container","spacing","item","xs","size","placeholder","value","onChange","fullWidth","color","log","marginRight","align","indeterminate","event","newSelecteds","map","n","inputProps","row","index","isItemSelected","indexOf","labelId","selectedIndex","newSelected","concat","slice","handleClick","role","tabIndex","component","scope","chageRouteToOrderView","label","handleShipOrderProcess","rowsPerPageOptions","colSpan","count","rowsPerPage","page","SelectProps","native","open","onClose","fontSize","dividers","display","marginTop","select","margin","i","control","disabled","total","finalShipData","obj","consignments","customer_code","reference_number","service_type_id","load_type","description","cod_favor_of","cod_collection_mode","consignment_type","dimension_unit","dimension1","dimension2","height","dimension3","weight_unit","declared_value","cod_amount","num_pieces","commodity_id","customer_reference_number","customOrderId","is_risk_surcharge_applicable","origin_details","phone","phoneno","alternate_phone","address_line_1","address","address_line_2","addressOptional","city","state","destination_details","billingAddress","bfirstName","blastName","bphoneno","baddress","baddressOptional","bpincode","bcity","bstate","pieces_detail","requestOptions","body","JSON","stringify","fetch","then","response","json","borderRadius","position","top","left","transform","bgcolor","textAlign","padding","flex","heigh","src","frameBorder","allow","allowFullScreen"],"mappings":"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","file":"static/js/25.eb7ad140.chunk.js","sourcesContent":["import axios from 'axios';\nimport Config from '../config/config';\n\nconst Apiurl = Config.apiUrl;\nconst headers = {\n    'Content-Type': 'application/json',\n    'Access-Control-Allow-Origin': '*'\n};\nconst HttpService = {\n    register(data) {\n        return axios.post(`${Apiurl}vendorLogReg/signup`, data);\n    },\n    vendorLogin(data) {\n        return axios.post(`${Apiurl}vendorLogReg/login`, data);\n    },\n    vendorForgotPassword(data) {\n        return axios.post(`${Apiurl}vendorLogReg/forgot-password`, data);\n    },\n    setNewPassword(data) {\n        return axios.post(`${Apiurl}vendorLogReg/set-password`, data);\n    },\n    getVendorProfileDetail() {\n        return axios.get(`${Apiurl}vendorLogReg/loggedVendor`);\n    },\n    vendorProfileUpdate(data) {\n        return axios.put(`${Apiurl}vendors/editVendorProfile`, data);\n    },\n    getAllShippingOrderData() {\n        return axios.get(`${Apiurl}shippingOrders/all`);\n    },\n    getshippingOrderViewDetails(orderid) {\n        return axios.get(`${Apiurl}shippingOrders/getShippingOrderById/${orderid}`);\n    },\n    checkPinCodes(pincode) {\n        return axios.get(`https://api.postalpincode.in/pincode/${pincode}`, { headers });\n    },\n    createShippingOrder(orderData) {\n        return axios.post(`${Apiurl}shippingOrders/new`, orderData);\n    },\n    cloneShippingOrder(orderId) {\n        return axios.put(`${Apiurl}shippingOrders/cloneShippingOrder/${orderId}`);\n    },\n    cancelShippingOrder(orderId) {\n        return axios.put(`${Apiurl}shippingOrders/cancelShippingOrder/${orderId}`);\n    },\n    updateShippingOrder(orderId, orderData) {\n        return axios.put(`${Apiurl}shippingOrders/editShippingOrder/${orderId}`, orderData);\n    }\n};\n\nexport default HttpService;\n","const dev = {\n    apiUrl: 'https://ysosy-backend.herokuapp.com/api/',\n    aadharTestRequest: 'https://test.zoop.one/in/identity/okyc/otp/request',\n    aadharLiveRequest: 'https://live.zoop.one/in/identity/okyc/otp/request',\n    aadharOtpVerifyRequest: 'https://test.zoop.one/in/identity/okyc/otp/verify'\n};\n\nconst test = {\n    apiUrl: 'https://ysosy-backend.herokuapp.com/api/',\n    aadharTestRequest: 'https://test.zoop.one/in/identity/okyc/otp/request',\n    aadharLiveRequest: 'https://live.zoop.one/in/identity/okyc/otp/request',\n    aadharOtpVerifyRequest: 'https://test.zoop.one/in/identity/okyc/otp/verify'\n};\n\nconst prod = {\n    apiUrl: 'https://ysosy-backend.herokuapp.com/api/'\n};\n\n// const config = process.env.REACT_APP_STAGE === 'test' ? test : dev;\n\n// eslint-disable-next-line no-nested-ternary\nconst config = process.env.REACT_APP_STAGE === 'production' ? prod : process.env.REACT_APP_STAGE === 'test' ? test : dev;\nexport default config;\n","import { useState, useEffect } from 'react';\nimport { useNavigate } from 'react-router-dom';\n// project imports\nimport MainCard from 'ui-component/cards/MainCard';\nimport { useTheme } from '@mui/material/styles';\nimport Box from '@mui/material/Box';\nimport Button from '@mui/material/Button';\nimport {\n    Table,\n    useMediaQuery,\n    TableContainer,\n    TableRow,\n    TableHead,\n    TableCell,\n    Checkbox,\n    TableBody,\n    ButtonGroup,\n    Chip,\n    Grid,\n    Typography,\n    TextField,\n    MenuItem,\n    FormControlLabel,\n    Radio,\n    RadioGroup,\n    Modal,\n    CardContent\n} from '@mui/material';\nimport HttpService from 'services/httpService';\nimport moment from 'moment';\nimport { notifier } from 'react-toast-notifier';\n// import CreatePlaceShipModal from './shipping-modal';\nimport Dialog from '@mui/material/Dialog';\nimport DialogActions from '@mui/material/DialogActions';\nimport DialogContent from '@mui/material/DialogContent';\nimport DialogTitle from '@mui/material/DialogTitle';\nimport FilterAltIcon from '@mui/icons-material/FilterAlt';\nimport CloseIcon from '@mui/icons-material/Close';\n\nimport TableFooter from '@mui/material/TableFooter';\nimport TablePagination from '@mui/material/TablePagination';\n// ==============================|| TYPOGRAPHY ||============================== //\n\nconst ManageCatalogus = () => {\n    const theme = useTheme();\n    const navigate = useNavigate();\n    const [orderData, setOrderData] = useState([]);\n    const [dupOrderData, setDupOrderData] = useState([]);\n    const [dupShipOrderData, setShipDupOrderData] = useState([]);\n    const [qtyValue, setQtyValue] = useState([]);\n    const [selected, setSelected] = useState([]);\n    const [csvData, setCsvData] = useState([]);\n    const [processBulkOrder, setProcessBulkOrder] = useState(false);\n    const [fromDate, setFromDate] = useState([null, null]);\n    const [orderId, setOrderId] = useState();\n    const [searchQuery, setSearchQuery] = useState();\n    const [awbNo, setAwbNo] = useState();\n    const [productName, setProductName] = useState();\n    const [channel, setChannel] = useState('All');\n    const [method, setMethod] = useState('All');\n    const [type, setType] = useState('All');\n    const [courier, setCourier] = useState('All');\n    const [attempts, setAttempts] = useState('All');\n    const [tagName, setTagName] = useState();\n    const [isFilter, setIsFilter] = useState(false);\n\n    const matchDownSM = useMediaQuery(theme.breakpoints.down('md'));\n\n    useEffect(() => {\n        // eslint-disable-next-line no-use-before-define\n        getShippingOrderList();\n        // eslint-disable-next-line\n    }, []);\n\n    const getShippingOrderList = async () => {\n        try {\n            const result = await HttpService.getAllShippingOrderData();\n            const orderDataList = [];\n            const prodTotal = [];\n            setShipDupOrderData(result.data);\n            result.data.forEach((ele) => {\n                const prodNames = [];\n                let totalPayment = 0;\n                ele.orderProducts.forEach((ele) => {\n                    prodNames.push(ele.product);\n                    prodTotal.push(ele.quantity * Number(ele.amount));\n                    totalPayment = prodTotal.reduce((a, b) => a + b, 0);\n                });\n                orderDataList.push({\n                    channel: ele?.channel ? ele?.channel : 'custom',\n                    orderId: ele?.orderId,\n                    date: moment(ele?.createdAt).format('MMM D, YYYY'),\n                    product: prodNames.join(', '),\n                    payment: totalPayment,\n                    method: ele?.orderType,\n                    customer: ele?.shippingAddress\n                        ? ele?.shippingAddress?.firstName + ele?.shippingAddress?.lastName\n                        : ele?.shippingAddress?.firstName + ele?.shippingAddress?.lastName,\n                    zipcode: ele?.shippingAddress ? ele?.shippingAddress?.pincode : ele?.shippingAddress?.pincode,\n                    weight: ele?.weightFd,\n                    ivrStatus: ele?.ivr_status,\n                    tags: ele?.tags,\n                    status: ele?.status,\n                    // eslint-disable-next-line no-underscore-dangle\n                    _id: ele?._id\n                });\n            });\n            setOrderData(orderDataList);\n            setDupOrderData(orderDataList);\n            setCsvData(orderDataList);\n            // eslint-disable-next-line no-use-before-define\n            getStatusAvailableQuantity(orderDataList);\n        } catch (error) {\n            console.error(error);\n            notifier({\n                type: 'error',\n                message: error.error,\n                autoDismissTimeout: 5000\n            });\n        }\n    };\n\n    const getStatusAvailableQuantity = (data) => {\n        const qtyValues = [];\n        qtyValues.all = data.length;\n        qtyValues.booked = data.filter((ele) => ele.status === 'Booked').length;\n        qtyValues.ship = data.filter((ele) => ele.status === 'Ship').length;\n        qtyValues.pendingpickup = data.filter((ele) => ele.status === 'pendingpickup').length;\n        qtyValues.intransit = data.filter((ele) => ele.status === 'intransit').length;\n        qtyValues.outfordelivery = data.filter((ele) => ele.status === 'outfordelivery').length;\n        qtyValues.Delivered = data.filter((ele) => ele.status === 'Delivered').length;\n        qtyValues.Cancelled = data.filter((ele) => ele.status === 'Cancelled').length;\n        setQtyValue(qtyValues);\n    };\n\n    const ProcessBulkOrderClose = () => {\n        setProcessBulkOrder(false);\n    };\n\n    const filter = () => {\n        setIsFilter(!isFilter);\n    };\n\n    const filterOrder = (filterOption) => {\n        if (filterOption === 'all') {\n            setOrderData(dupOrderData);\n            setCsvData(dupOrderData);\n        } else {\n            setOrderData(dupOrderData.filter((ele) => ele.status === filterOption));\n            setCsvData(dupOrderData.filter((ele) => ele.status === filterOption));\n        }\n    };\n\n    const onSelectAllClick = (event) => {\n        if (event.target.checked) {\n            // eslint-disable-next-line no-underscore-dangle\n            const newSelecteds = orderData.map((n) => n._id);\n            setSelected(newSelecteds);\n            return;\n        }\n        setSelected([]);\n    };\n\n    const handleClick = (name) => {\n        const selectedIndex = selected.indexOf(name);\n        let newSelected = [];\n\n        if (selectedIndex === -1) {\n            newSelected = newSelected.concat(selected, name);\n        } else if (selectedIndex === 0) {\n            newSelected = newSelected.concat(selected.slice(1));\n        } else if (selectedIndex === selected.length - 1) {\n            newSelected = newSelected.concat(selected.slice(0, -1));\n        } else if (selectedIndex > 0) {\n            newSelected = newSelected.concat(selected.slice(0, selectedIndex), selected.slice(selectedIndex + 1));\n        }\n\n        setSelected(newSelected);\n    };\n\n    const isSelected = (name) => selected.indexOf(name) !== -1;\n\n    const chageRouteToOrderView = (orderId) => {\n        navigate(`/order-details/${orderId}`);\n    };\n\n    const [isShowing, setIsShowing] = useState(false);\n    const [scroll, setScroll] = useState('paper');\n    const [selectedOrderId, setSelectedOrderId] = useState('');\n\n    const pickUpWarehouseAddress = [\n        { id: '1', name: 'Nayan Patil', isDefault: true },\n        { id: '2', name: 'Nitin Patil', isDefault: false }\n    ];\n\n    const pickUpRTOWarehouseAddress = [\n        { id: '1', name: 'Nayan Patil', isDefault: true },\n        { id: '2', name: 'Nitin Patil', isDefault: false }\n    ];\n\n    const [shipProcessForm, setShipProcessForm] = useState({\n        orderId: '',\n        wareHousePickupAddress: '',\n        rtoWareHouseAddress: '',\n        essentialItem: false,\n        dangerousGood: false,\n        courierPartner: ''\n    });\n    const { wareHousePickupAddress, rtoWareHouseAddress, essentialItem, dangerousGood, courierPartner } = shipProcessForm;\n    const handleShipOrderProcess = (data, orderId) => {\n        setSelectedOrderId(orderId);\n        setIsShowing(true);\n        setScroll('paper');\n        // eslint-disable-next-line no-use-before-define\n        checkDefaultAddress();\n        // Need to be added below function\n        // TO get Addresses for pickup warehouse and RTO, Courier parnters\n    };\n\n    const checkDefaultAddress = () => {\n        const getDefaultPickUPAddr = pickUpWarehouseAddress.filter((ele) => ele.isDefault === true);\n        const getDefaultRTOAddr = pickUpRTOWarehouseAddress.filter((ele) => ele.isDefault === true);\n        setShipProcessForm({\n            ...shipProcessForm,\n            wareHousePickupAddress: getDefaultPickUPAddr[0].id,\n            rtoWareHouseAddress: getDefaultRTOAddr[0].id\n        });\n    };\n\n    const courierPartners = [\n        { id: '1', name: 'DTDC Air (₹117)' },\n        { id: '2', name: 'DTDC Premium (₹108.2)' },\n        { id: '3', name: 'Xpressbees Surface (₹108.74)' },\n        { id: '4', name: 'Xpressbees 1 K.G (₹131)' }\n    ];\n\n    const checkedCheckBox = (e) => {\n        if (e.target.checked && e.target.name === 'essentialItem') {\n            setShipProcessForm({ ...shipProcessForm, [e.target.name]: true });\n        }\n        if (e.target.checked && e.target.name === 'dangerousGood') {\n            setShipProcessForm({ ...shipProcessForm, [e.target.name]: true });\n        }\n    };\n\n    const shipOrder = () => {\n        shipProcessForm.orderId = selectedOrderId;\n        let total = 0;\n        const prodTotal = [];\n        console.log(shipProcessForm.courierPartner, 'shipProcessFormdddd');\n        // eslint-disable-next-line no-underscore-dangle\n        const finalShipData = dupShipOrderData.filter((ele) => ele._id === selectedOrderId);\n        finalShipData[0].orderProducts.forEach((ele) => {\n            prodTotal.push(ele.quantity * Number(ele.amount));\n            total = prodTotal.reduce((a, b) => a + b, 0);\n        });\n        const obj = {\n            consignments: [\n                {\n                    customer_code: 'GL112',\n                    reference_number: finalShipData[0].orderId,\n                    service_type_id: 'GROUND EXPRESS',\n                    load_type: 'NON-DOCUMENT',\n                    description: 'sample',\n                    cod_favor_of: 'In Favour of',\n                    cod_collection_mode: 'cash',\n                    consignment_type: 'Forward',\n                    dimension_unit: 'cm',\n                    length: finalShipData[0].dimension1,\n                    width: finalShipData[0].dimension2,\n                    height: finalShipData[0].dimension3,\n                    weight_unit: 'kg',\n                    weight: finalShipData[0].weightFd / 1000,\n                    declared_value: '2299',\n                    cod_amount: total,\n                    num_pieces: finalShipData[0].orderProducts.length,\n                    commodity_id: 'Others',\n                    customer_reference_number: finalShipData[0].customOrderId,\n                    is_risk_surcharge_applicable: false,\n                    origin_details: {\n                        name: finalShipData[0].shippingAddress.firstName + finalShipData[0].shippingAddress.lastName,\n                        phone: finalShipData[0].shippingAddress.phoneno,\n                        alternate_phone: finalShipData[0].shippingAddress.phoneno,\n                        address_line_1: finalShipData[0].shippingAddress.address,\n                        address_line_2: finalShipData[0].shippingAddress.addressOptional,\n                        pincode: finalShipData[0].shippingAddress.pincode,\n                        city: finalShipData[0].shippingAddress.city,\n                        state: finalShipData[0].shippingAddress.state\n                    },\n                    destination_details: {\n                        name: finalShipData[0].billingAddress.bfirstName + finalShipData[0].billingAddress.blastName,\n                        phone: finalShipData[0].billingAddress.bphoneno,\n                        alternate_phone: finalShipData[0].billingAddress.bphoneno,\n                        address_line_1: finalShipData[0].billingAddress.baddress,\n                        address_line_2: finalShipData[0].billingAddress.baddressOptional,\n                        pincode: finalShipData[0].billingAddress.bpincode,\n                        city: finalShipData[0].billingAddress.bcity,\n                        state: finalShipData[0].billingAddress.bstate\n                    },\n                    pieces_detail: [\n                        {\n                            description: 'WESTERN DIGITAL 1 TB EXTERNAL HDD',\n                            declared_value: '2299',\n                            weight: '0.15',\n                            height: '8',\n                            length: '8',\n                            width: '10'\n                        }\n                    ]\n                }\n            ]\n        };\n        console.log(obj, 'obj');\n        try {\n            const requestOptions = {\n                method: 'POST',\n                headers: {\n                    'Content-Type': 'application/json',\n                    'api-key': 'a50283ab7acb25f2301d520a9a589c'\n                },\n                body: JSON.stringify(obj)\n            };\n            fetch(`https://demodashboardapi.shipsy.in/api/customer/integration/consignment/softdata`, requestOptions)\n                .then((response) => response.json())\n                .then((data) => {\n                    console.log(data, 'data');\n                    // On success of this response update the status to book with some updated fields which we get in response\n                });\n        } catch (error) {\n            console.error(error);\n        }\n    };\n\n    const onSubmit = () => {\n        console.log('Hello1', fromDate, orderId, searchQuery, awbNo, productName, channel, type, courier, method, attempts, tagName);\n    };\n    const onClear = () => {\n        console.log('clear');\n        setFromDate('');\n        setOrderId('');\n        setSearchQuery('');\n        setAwbNo('');\n        setProductName('');\n        setChannel('All');\n        setType('All');\n        setCourier('All');\n        setMethod('All');\n        setAttempts('All');\n        setTagName('');\n    };\n\n    const styleModel = {\n        position: 'absolute',\n        top: '50%',\n        left: '50%',\n        transform: 'translate(-50%, -50%)',\n        width: '40%',\n        height: '50%',\n        bgcolor: 'background.paper',\n        textAlign: 'left',\n        borderRadius: '5px'\n    };\n    return (\n        <MainCard title=\"Manage Catalogus\">\n            <Box sx={{ width: '100%' }}>\n                <div style={{ marginBottom: 16, float: 'right' }}>\n                    <Button variant=\"outlined\" onClick={filter}>\n                        {isFilter ? (\n                            <>\n                                <CloseIcon /> Close\n                            </>\n                        ) : (\n                            <>\n                                <FilterAltIcon /> Filter\n                            </>\n                        )}\n                    </Button>\n                </div>\n                <br />\n                <br />\n                {isFilter ? (\n                    <Grid container spacing={2}>\n                        <Grid item xs={matchDownSM ? 12 : 12}>\n                            <Typography>Search by Product name or SKU Details:</Typography>\n                        </Grid>\n                        <Grid item xs={matchDownSM ? 4 : 4}>\n                            <TextField\n                                id=\"outlined-orderid-basic\"\n                                size=\"small\"\n                                name=\"productName\"\n                                placeholder=\"Search by product name or SKU\"\n                                value={productName}\n                                onChange={(e) => setProductName(e.target.value)}\n                                fullWidth\n                                variant=\"outlined\"\n                            />\n                        </Grid>\n                        <Grid item xs={matchDownSM ? 2 : 2}>\n                            <Button variant=\"contained\" color=\"success\" onClick={onSubmit} size=\"small\" style={{ marginRight: '5px' }}>\n                                Apply\n                            </Button>\n                            <Button variant=\"contained\" color=\"error\" onClick={onClear} size=\"small\">\n                                Clear\n                            </Button>\n                        </Grid>\n                    </Grid>\n                ) : (\n                    ''\n                )}\n                <br />\n                <hr />\n                <br />\n                <div style={{ marginBottom: 16 }}>\n                    <ButtonGroup variant=\"outlined\" aria-label=\"outlined primary button group\">\n                        <Button onClick={() => filterOrder('all')}>All({qtyValue.all})</Button>\n                        <Button onClick={() => filterOrder('Booked')}>Requested ({qtyValue.booked})</Button>\n                        <Button onClick={() => filterOrder('pendingpickup')}>Accepted({qtyValue.pendingpickup})</Button>\n                        <Button onClick={() => filterOrder('intransit')}>Rejected({qtyValue.intransit})</Button>\n                    </ButtonGroup>\n                </div>\n                <TableContainer>\n                    <Table aria-label=\"customized table\">\n                        <TableHead>\n                            <TableRow>\n                                <TableCell align=\"center\">\n                                    <Checkbox\n                                        indeterminate={selected.length > 0 && selected.length < orderData.length}\n                                        checked={orderData.length > 0 && selected.length === orderData.length}\n                                        onChange={onSelectAllClick}\n                                        inputProps={{ 'aria-label': 'select all desserts' }}\n                                    />\n                                </TableCell>\n                                <TableCell align=\"center\">Product</TableCell>\n                                <TableCell align=\"center\">SKU</TableCell>\n                                <TableCell align=\"center\">DIMENSIONS (LBH) IN CM</TableCell>\n                                <TableCell align=\"center\">WEIGHT (GM)</TableCell>\n                                <TableCell align=\"center\">GST %</TableCell>\n                                <TableCell align=\"center\">HSN</TableCell>\n                                <TableCell align=\"center\">WEIGHT APPLY</TableCell>\n                                <TableCell align=\"center\">Status</TableCell>\n                                <TableCell align=\"center\">ACTION</TableCell>\n                            </TableRow>\n                        </TableHead>\n                        <TableBody>\n                            {orderData.map((row, index) => {\n                                // eslint-disable-next-line no-underscore-dangle\n                                const isItemSelected = isSelected(row._id);\n                                const labelId = `enhanced-table-checkbox-${index}`;\n                                return (\n                                    <TableRow\n                                        // eslint-disable-next-line no-underscore-dangle\n                                        key={row._id}\n                                        // eslint-disable-next-line no-underscore-dangle\n                                        onClick={() => handleClick(row._id)}\n                                        role=\"checkbox\"\n                                        aria-checked={isItemSelected}\n                                        tabIndex={-1}\n                                        selected={isItemSelected}\n                                    >\n                                        <TableCell align=\"center\">\n                                            {row.status !== 'Cancelled' && row.status !== 'Booked' && (\n                                                <Checkbox checked={isItemSelected} inputProps={{ 'aria-labelledby': labelId }} />\n                                            )}\n                                        </TableCell>\n                                        <TableCell component=\"th\" scope=\"row\" align=\"center\">\n                                            {row.channel}\n                                        </TableCell>\n                                        <TableCell align=\"center\">\n                                            {row.orderId ? (\n                                                // eslint-disable-next-line no-underscore-dangle\n                                                <Button onClick={() => chageRouteToOrderView(row._id)}>{row.orderId}</Button>\n                                            ) : (\n                                                `-`\n                                            )}\n                                        </TableCell>\n                                        <TableCell align=\"center\">{row.date}</TableCell>\n                                        <TableCell align=\"center\">{row.product ? row.product : `-`}</TableCell>\n                                        <TableCell align=\"center\">{row.payment}</TableCell>\n                                        <TableCell align=\"center\">{row.method}</TableCell>\n                                        <TableCell align=\"center\">{row.customer}</TableCell>\n                                        <TableCell align=\"center\">{row.zipcode}</TableCell>\n                                        <TableCell align=\"center\">\n                                            {row.status === 'Cancelled' ? (\n                                                <Chip label={row.status} color=\"primary\" variant=\"outlined\" />\n                                            ) : (\n                                                <Chip\n                                                    label={row.status}\n                                                    color=\"primary\"\n                                                    variant=\"outlined\"\n                                                    // eslint-disable-next-line no-underscore-dangle\n                                                    onClick={() => handleShipOrderProcess(row, row._id)}\n                                                />\n                                            )}\n                                        </TableCell>\n                                    </TableRow>\n                                );\n                            })}\n                        </TableBody>\n                        <TableFooter>\n                            <TableRow>\n                                <TablePagination\n                                    rowsPerPageOptions={[5, 10, 25, { label: 'All', value: -1 }]}\n                                    colSpan={12}\n                                    count={50}\n                                    rowsPerPage={10}\n                                    page={0}\n                                    SelectProps={{\n                                        inputProps: {\n                                            'aria-label': 'rows per page'\n                                        },\n                                        native: true\n                                    }}\n                                    // onPageChange={handleChangePage}\n                                    // onRowsPerPageChange={handleChangeRowsPerPage}\n                                    // ActionsComponent={TablePaginationActions}\n                                />\n                            </TableRow>\n                        </TableFooter>\n                    </Table>\n                </TableContainer>\n            </Box>\n\n            <Box>\n                <Dialog\n                    open={isShowing}\n                    onClose={() => setIsShowing(false)}\n                    scroll={scroll}\n                    aria-labelledby=\"scroll-dialog-title\"\n                    aria-describedby=\"scroll-dialog-description\"\n                >\n                    <DialogTitle id=\"scroll-dialog-title\" style={{ fontSize: '1.5em' }}>\n                        Ship Your Package Now\n                    </DialogTitle>\n                    <DialogContent dividers={scroll === 'paper'}>\n                        <Grid style={{ display: 'flex', marginTop: '5%', marginBottom: '5%', width: 500 }}>\n                            <Grid item xs={6} style={{ marginRight: 20 }}>\n                                <Typography variant=\"h5\">Pickup Warehouse</Typography>\n                                <TextField\n                                    id=\"outlined-select-ordertype\"\n                                    select\n                                    label=\"Pickup Warehouse Address\"\n                                    name=\"wareHousePickupAddress\"\n                                    value={wareHousePickupAddress}\n                                    onChange={(e) => setShipProcessForm({ ...shipProcessForm, [e.target.name]: e.target.value })}\n                                    fullWidth\n                                    size=\"small\"\n                                    margin=\"normal\"\n                                    variant=\"outlined\"\n                                >\n                                    {pickUpWarehouseAddress?.map((data, i) => (\n                                        <MenuItem value={data.id} key={i + 1}>\n                                            {data.name} {data.isDefault === true ? `(Default)` : ``}\n                                        </MenuItem>\n                                    ))}\n                                </TextField>\n                                <FormControlLabel\n                                    control={<Checkbox name=\"essentialItem\" checked={essentialItem} onChange={(e) => checkedCheckBox(e)} />}\n                                    label=\"Is essential item ?\"\n                                />\n                            </Grid>\n                            <Grid item xs={6}>\n                                <Typography variant=\"h5\">RTO Warehouse</Typography>\n                                <TextField\n                                    id=\"outlined-select-ordertype\"\n                                    select\n                                    label=\"RTO Warehouse\"\n                                    name=\"rtoWareHouseAddress\"\n                                    value={rtoWareHouseAddress}\n                                    onChange={(e) => setShipProcessForm({ ...shipProcessForm, [e.target.name]: e.target.value })}\n                                    fullWidth\n                                    size=\"small\"\n                                    margin=\"normal\"\n                                    variant=\"outlined\"\n                                >\n                                    {pickUpRTOWarehouseAddress?.map((data, i) => (\n                                        <MenuItem value={data.id} key={i + 1}>\n                                            {data.name} {data.isDefault === true ? `(Default)` : ``}\n                                        </MenuItem>\n                                    ))}\n                                </TextField>\n                                <FormControlLabel\n                                    control={<Checkbox name=\"dangerousGood\" checked={dangerousGood} onChange={(e) => checkedCheckBox(e)} />}\n                                    label=\"Is dangerous good ?\"\n                                />\n                            </Grid>\n                        </Grid>\n                        <hr />\n                        <Grid style={{ display: 'flex', marginTop: '5%', marginBottom: '5%', width: 500 }}>\n                            <RadioGroup\n                                row\n                                aria-label=\"courier-partner\"\n                                value={courierPartner}\n                                name=\"courierPartner\"\n                                onChange={(e) => setShipProcessForm({ ...shipProcessForm, [e.target.name]: e.target.value })}\n                            >\n                                {courierPartners?.map((data, i) => (\n                                    <Grid item xs={6} key={i + 1}>\n                                        <FormControlLabel value={data.id} control={<Radio />} label={data.name} />\n                                    </Grid>\n                                ))}\n                            </RadioGroup>\n                        </Grid>\n                    </DialogContent>\n                    <DialogActions>\n                        <Button variant=\"contained\" color=\"error\" onClick={() => setIsShowing(false)}>\n                            Close\n                        </Button>\n                        <Button variant=\"contained\" disabled={!courierPartner} color=\"primary\" onClick={shipOrder}>\n                            Ship\n                        </Button>\n                    </DialogActions>\n                </Dialog>\n            </Box>\n            <Modal\n                open={processBulkOrder}\n                onClose={ProcessBulkOrderClose}\n                aria-labelledby=\"modal-modal-title\"\n                aria-describedby=\"modal-modal-description\"\n                style={{\n                    borderRadius: '5px'\n                }}\n            >\n                <Box sx={styleModel}>\n                    <Typography style={{ padding: '20px 10px 1px 20px', fontSize: '22px' }}>\n                        How to Raise a Weight Dispute on NimbusPost Seller Panel?\n                    </Typography>\n                    <CardContent style={{ flex: '1 0 auto' }}>\n                        <iframe\n                            id=\"video\"\n                            width=\"100%\"\n                            heigh=\"100%\"\n                            src=\"https://www.youtube.com/embed/sHHbDN8064E\"\n                            frameBorder=\"0\"\n                            allow=\"accelerometer, autoplay; encrypted-media; gyroscope; picture-in-picture\"\n                            allowFullScreen\n                            title=\"video\"\n                        />\n                    </CardContent>\n                </Box>\n            </Modal>\n        </MainCard>\n    );\n};\nexport default ManageCatalogus;\n"],"sourceRoot":""}