{"version":3,"sources":["services/httpService.js","config/config.js","views/pages/authentication/AuthWrapper1.js","views/pages/authentication/AuthCardWrapper.js","ui-component/cards/AuthFooter.js","../node_modules/@mui/icons-material/Visibility.js","../node_modules/@mui/icons-material/VisibilityOff.js","hooks/useScriptRef.js","utils/password-strength.js","../node_modules/@mui/material/InputAdornment/inputAdornmentClasses.js","../node_modules/@mui/material/InputAdornment/InputAdornment.js","views/pages/authentication/authentication3/forgot-reset-password.js"],"names":["Apiurl","process","REACT_APP_STAGE","apiUrl","aadharTestRequest","aadharLiveRequest","aadharOtpVerifyRequest","headers","HttpService","register","data","axios","post","vendorLogin","vendorForgotPassword","setNewPassword","getVendorProfileDetail","get","vendorProfileUpdate","put","getAllShippingOrderData","getshippingOrderViewDetails","orderid","checkPinCodes","pincode","createShippingOrder","orderData","cloneShippingOrder","orderId","cancelShippingOrder","updateShippingOrder","AuthWrapper1","styled","backgroundColor","theme","palette","primary","light","minHeight","AuthCardWrapper","children","other","sx","maxWidth","xs","lg","margin","md","flexGrow","flexBasis","content","p","sm","xl","AuthFooter","direction","justifyContent","variant","component","Link","href","target","underline","_interopRequireDefault","require","Object","defineProperty","exports","value","default","_createSvgIcon","_jsxRuntime","_default","jsx","d","useScriptRef","scripted","useRef","useEffect","current","strengthColor","count","label","color","errorMain","warningDark","orangeMain","successMain","successDark","strengthIndicator","number","strengths","length","RegExp","test","hasNumber","hasSpecial","hasMixed","getInputAdornmentUtilityClass","slot","generateUtilityClass","_span","inputAdornmentClasses","generateUtilityClasses","_excluded","InputAdornmentRoot","name","overridesResolver","props","styles","ownerState","root","capitalize","position","disablePointerEvents","_extends","display","height","maxHeight","alignItems","whiteSpace","action","active","positionStart","hiddenLabel","marginTop","marginRight","marginLeft","pointerEvents","InputAdornment","React","inProps","ref","useThemeProps","className","disableTypography","variantProp","_objectWithoutPropertiesLoose","muiFormControl","useFormControl","size","classes","slots","composeClasses","useUtilityClasses","_jsx","FormControlContext","Provider","as","clsx","_jsxs","Typography","ForgotResetPassword","useTheme","scriptedRef","navigate","useNavigate","matchDownSM","useMediaQuery","breakpoints","down","useState","showPassword","setShowPassword","strength","setStrength","level","setLevel","email","useParams","handleClickShowPassword","handleMouseDownPassword","event","preventDefault","changePassword","temp","console","log","container","item","m","mb","spacing","secondary","main","gutterBottom","initialValues","password","passwordConfirmation","submit","validationSchema","Yup","shape","max","required","oneOf","onSubmit","values","a","setErrors","setStatus","setSubmitting","objData","response","notifier","type","message","autoDismissTimeout","success","errors","handleBlur","handleChange","handleSubmit","isSubmitting","touched","noValidate","fullWidth","error","Boolean","typography","customInput","htmlFor","id","onBlur","onChange","e","endAdornment","onClick","onMouseDown","edge","inputProps","style","width","borderRadius","fontSize","mt","disableElevation","disabled"],"mappings":"sJAGMA,GCkByC,eAAhCC,mIAAYC,gBAPd,CACTC,OAAQ,kCAMyDF,mIAAYC,gBAdpE,CACTC,OAAQ,gCACRC,kBAAmB,qDACnBC,kBAAmB,qDACnBC,uBAAwB,uDDRNH,OAChBI,EAAU,CACZ,eAAgB,mBAChB,8BAA+B,KAE7BC,EAAc,CAChBC,SADgB,SACPC,GACL,OAAOC,IAAMC,KAAN,UAAcZ,EAAd,uBAA2CU,IAEtDG,YAJgB,SAIJH,GACR,OAAOC,IAAMC,KAAN,UAAcZ,EAAd,sBAA0CU,IAErDI,qBAPgB,SAOKJ,GACjB,OAAOC,IAAMC,KAAN,UAAcZ,EAAd,gCAAoDU,IAE/DK,eAVgB,SAUDL,GACX,OAAOC,IAAMC,KAAN,UAAcZ,EAAd,6BAAiDU,IAE5DM,uBAbgB,WAcZ,OAAOL,IAAMM,IAAN,UAAajB,EAAb,+BAEXkB,oBAhBgB,SAgBIR,GAChB,OAAOC,IAAMQ,IAAN,UAAanB,EAAb,6BAAgDU,IAE3DU,wBAnBgB,WAoBZ,OAAOT,IAAMM,IAAN,UAAajB,EAAb,wBAEXqB,4BAtBgB,SAsBYC,GACxB,OAAOX,IAAMM,IAAN,UAAajB,EAAb,+CAA0DsB,KAErEC,cAzBgB,SAyBFC,GACV,OAAOb,IAAMM,IAAN,+CAAkDO,GAAW,CAAEjB,aAE1EkB,oBA5BgB,SA4BIC,GAChB,OAAOf,IAAMC,KAAN,UAAcZ,EAAd,sBAA0C0B,IAErDC,mBA/BgB,SA+BGC,GACf,OAAOjB,IAAMQ,IAAN,UAAanB,EAAb,6CAAwD4B,KAEnEC,oBAlCgB,SAkCID,GAChB,OAAOjB,IAAMQ,IAAN,UAAanB,EAAb,8CAAyD4B,KAEpEE,oBArCgB,SAqCIF,EAASF,GACzB,OAAOf,IAAMQ,IAAN,UAAanB,EAAb,4CAAuD4B,GAAWF,KAIlElB,O,iCElDf,WAKMuB,EAAeC,YAAO,MAAPA,EAAc,kBAAgB,CAC/CC,gBAD+B,EAAGC,MACXC,QAAQC,QAAQC,MACvCC,UAAW,YAGAP,O,4FCqBAQ,IArBS,SAAC,GAAD,IAAGC,EAAH,EAAGA,SAAaC,EAAhB,wBACpB,cAAC,IAAD,yBACIC,GAAI,CACAC,SAAU,CAAEC,GAAI,IAAKC,GAAI,KACzBC,OAAQ,CAAEF,GAAI,IAAKG,GAAI,GACvB,QAAS,CACLC,SAAU,EACVC,UAAW,QAGnBC,SAAS,GACLT,GAVR,aAYI,cAAC,IAAD,CAAKC,GAAI,CAAES,EAAG,CAAEP,GAAI,EAAGQ,GAAI,EAAGC,GAAI,IAAlC,SAA0Cb,S,iCCvBlD,qCAgBec,IAXI,kBACf,eAAC,IAAD,CAAOC,UAAU,MAAMC,eAAe,gBAAtC,UACI,cAAC,IAAD,CAAYC,QAAQ,YAAYC,UAAWC,IAAMC,KAAK,GAAGC,OAAO,SAASC,UAAU,QAAnF,8BAGA,cAAC,IAAD,CAAYL,QAAQ,YAAYC,UAAWC,IAAMC,KAAK,iCAAiCC,OAAO,SAASC,UAAU,QAAjH,2C,iCCRR,IAAIC,EAAyBC,EAAQ,IAErCC,OAAOC,eAAeC,EAAS,aAAc,CAC3CC,OAAO,IAETD,EAAQE,aAAU,EAElB,IAAIC,EAAiBP,EAAuBC,EAAQ,KAEhDO,EAAcP,EAAQ,GAEtBQ,GAAW,EAAIF,EAAeD,UAAuB,EAAIE,EAAYE,KAAK,OAAQ,CACpFC,EAAG,sNACD,cAEJP,EAAQE,QAAUG,G,iCCflB,IAAIT,EAAyBC,EAAQ,IAErCC,OAAOC,eAAeC,EAAS,aAAc,CAC3CC,OAAO,IAETD,EAAQE,aAAU,EAElB,IAAIC,EAAiBP,EAAuBC,EAAQ,KAEhDO,EAAcP,EAAQ,GAEtBQ,GAAW,EAAIF,EAAeD,UAAuB,EAAIE,EAAYE,KAAK,OAAQ,CACpFC,EAAG,8fACD,iBAEJP,EAAQE,QAAUG,G,iCCjBlB,WAiBeG,IAbM,WACjB,IAAMC,EAAWC,kBAAO,GASxB,OAPAC,qBACI,kBAAM,WACFF,EAASG,SAAU,KAEvB,IAGGH,I,iCCdX,0FAeaI,EAAgB,SAACC,GAC1B,OAAIA,EAAQ,EAAU,CAAEC,MAAO,OAAQC,MAAOf,IAAMgB,WAChDH,EAAQ,EAAU,CAAEC,MAAO,OAAQC,MAAOf,IAAMiB,aAChDJ,EAAQ,EAAU,CAAEC,MAAO,SAAUC,MAAOf,IAAMkB,YAClDL,EAAQ,EAAU,CAAEC,MAAO,OAAQC,MAAOf,IAAMmB,aAChDN,EAAQ,EAAU,CAAEC,MAAO,SAAUC,MAAOf,IAAMoB,aAC/C,CAAEN,MAAO,OAAQC,MAAOf,IAAMgB,YAI5BK,EAAoB,SAACC,GAC9B,IAAIC,EAAY,EAMhB,OALID,EAAOE,OAAS,IAAGD,GAAa,GAChCD,EAAOE,OAAS,IAAGD,GAAa,GAtBtB,SAACD,GAAD,OAAY,IAAIG,OAAO,SAASC,KAAKJ,GAuB/CK,CAAUL,KAASC,GAAa,GAjBrB,SAACD,GAAD,OAAY,IAAIG,OAAO,qBAAqBC,KAAKJ,GAkB5DM,CAAWN,KAASC,GAAa,GArBxB,SAACD,GAAD,OAAY,IAAIG,OAAO,SAASC,KAAKJ,IAAW,IAAIG,OAAO,SAASC,KAAKJ,GAsBlFO,CAASP,KAASC,GAAa,GAC5BA,I,sIC/BJ,SAASO,EAA8BC,GAC5C,OAAOC,YAAqB,oBAAqBD,GAEnD,ICDIE,EDEWC,EADeC,YAAuB,oBAAqB,CAAC,OAAQ,SAAU,WAAY,WAAY,gBAAiB,cAAe,uBAAwB,cAAe,c,cCCtLC,EAAY,CAAC,WAAY,YAAa,YAAa,uBAAwB,oBAAqB,WAAY,WAqC5GC,EAAqBzE,YAAO,MAAO,CACvC0E,KAAM,oBACNP,KAAM,OACNQ,kBAzBwB,SAACC,EAAOC,GAChC,IACEC,EACEF,EADFE,WAEF,MAAO,CAACD,EAAOE,KAAMF,EAAO,WAAD,OAAYG,YAAWF,EAAWG,aAAkD,IAApCH,EAAWI,sBAAiCL,EAAOK,qBAAsBL,EAAOC,EAAWrD,YAkB7IzB,EAIxB,gBACDE,EADC,EACDA,MACA4E,EAFC,EAEDA,WAFC,OAGGK,YAAS,CACbC,QAAS,OACTC,OAAQ,SAERC,UAAW,MACXC,WAAY,SACZC,WAAY,SACZrC,MAAOjD,EAAMC,QAAQsF,OAAOC,QACJ,WAAvBZ,EAAWrD,SAAX,2BAEK6C,EAAsBqB,cAF3B,kBAEkDrB,EAAsBsB,YAFxE,KAEyF,CACxFC,UAAW,KAEY,UAAxBf,EAAWG,UAAwB,CAEpCa,YAAa,GACY,QAAxBhB,EAAWG,UAAsB,CAElCc,WAAY,IACyB,IAApCjB,EAAWI,sBAAiC,CAE7Cc,cAAe,YAEXC,EAA8BC,cAAiB,SAAwBC,EAASC,GACpF,IAAMxB,EAAQyB,YAAc,CAC1BzB,MAAOuB,EACPzB,KAAM,sBAINlE,EAOEoE,EAPFpE,SACA8F,EAME1B,EANF0B,UAFF,EAQI1B,EALFlD,iBAHF,MAGc,MAHd,IAQIkD,EAJFM,4BAJF,WAQIN,EAHF2B,yBALF,SAMEtB,EAEEL,EAFFK,SACSuB,EACP5B,EADFnD,QAEIhB,EAAQgG,YAA8B7B,EAAOJ,GAE7CkC,EAAiBC,eAAoB,GACvClF,EAAU+E,EAEVA,GAAeE,EAAejF,QAQ9BiF,IAAmBjF,IACrBA,EAAUiF,EAAejF,SAG3B,IAAMqD,EAAaK,YAAS,GAAIP,EAAO,CACrCgB,YAAac,EAAed,YAC5BgB,KAAMF,EAAeE,KACrB1B,uBACAD,WACAxD,YAGIoF,EArFkB,SAAA/B,GACxB,IACE+B,EAME/B,EANF+B,QACA3B,EAKEJ,EALFI,qBACAU,EAIEd,EAJFc,YACAX,EAGEH,EAHFG,SACA2B,EAEE9B,EAFF8B,KACAnF,EACEqD,EADFrD,QAEIqF,EAAQ,CACZ/B,KAAM,CAAC,OAAQG,GAAwB,uBAAwBD,GAAY,WAAJ,OAAeD,YAAWC,IAAaxD,EAASmE,GAAe,cAAegB,GAAQ,OAAJ,OAAW5B,YAAW4B,MAEjL,OAAOG,YAAeD,EAAO5C,EAA+B2C,GAyE5CG,CAAkBlC,GAClC,OAAoBmC,cAAKC,IAAmBC,SAAU,CACpD/E,MAAO,KACP5B,SAAuByG,cAAKxC,EAAoBU,YAAS,CACvDiC,GAAI1F,EACJoD,WAAYA,EACZwB,UAAWe,YAAKR,EAAQ9B,KAAMuB,GAC9BF,IAAKA,GACJ3F,EAAO,CACRD,SAA8B,kBAAbA,GAA0B+F,EAGzBe,eAAMpB,WAAgB,CACtC1F,SAAU,CAAc,UAAbyE,EAEXZ,IAAUA,EAAqB4C,cAAK,OAAQ,CAC1CX,UAAW,cACX9F,SAAU,YACN,KAAMA,KAT8DyG,cAAKM,IAAY,CAC3FpE,MAAO,iBACP3C,SAAUA,YAuEHyF,O,4VCgFAuB,UA5Oa,WACxB,IAAMtH,EAAQuH,cACRC,EAAc/E,cACdgF,EAAWC,cACXC,EAAcC,YAAc5H,EAAM6H,YAAYC,KAAK,OACzD,EAAwCC,oBAAS,GAAjD,mBAAOC,EAAP,KAAqBC,EAArB,KACA,EAAgCF,mBAAS,GAAzC,mBAAOG,EAAP,KAAiBC,EAAjB,KACA,EAA0BJ,qBAA1B,mBAAOK,EAAP,KAAcC,EAAd,KACQC,EAAUC,cAAVD,MAEFE,EAA0B,WAC5BP,GAAiBD,IAGfS,EAA0B,SAACC,GAC7BA,EAAMC,kBAGJC,EAAiB,SAAC1G,GACpB,IAAM2G,EAAOtF,YAAkBrB,GAC/BiG,EAAYU,GACZR,EAASvF,YAAc+F,KAG3B,OADAC,QAAQC,IAAIT,EAAO,SAEf,cAAC,IAAD,UACI,eAAC,IAAD,CAAMU,WAAS,EAAC3H,UAAU,SAASC,eAAe,WAAWd,GAAI,CAAEJ,UAAW,SAA9E,UACI,cAAC,IAAD,CAAM6I,MAAI,EAACvI,GAAI,GAAf,SACI,cAAC,IAAD,CAAMsI,WAAS,EAAC1H,eAAe,SAAS+D,WAAW,SAAS7E,GAAI,CAAEJ,UAAW,sBAA7E,SACI,cAAC,IAAD,CAAM6I,MAAI,EAACzI,GAAI,CAAE0I,EAAG,CAAExI,GAAI,EAAGQ,GAAI,GAAKiI,GAAI,GAA1C,SACI,cAAC,IAAD,UACI,eAAC,IAAD,CAAMH,WAAS,EAACI,QAAS,EAAG/D,WAAW,SAAS/D,eAAe,SAA/D,UACI,cAAC,IAAD,CAAM2H,MAAI,EAACvI,GAAI,GAAf,SACI,cAAC,IAAD,CACIsI,WAAS,EACT3H,UAAWsG,EAAc,iBAAmB,MAC5CtC,WAAW,SACX/D,eAAe,SAJnB,SAMI,cAAC,IAAD,CAAM2H,MAAI,EAAV,SACI,cAAC,IAAD,CAAO5D,WAAW,SAAS/D,eAAe,SAAS8H,QAAS,EAA5D,SACI,cAAC,IAAD,CACInG,MAAOjD,EAAMC,QAAQoJ,UAAUC,KAC/BC,cAAY,EACZhI,QAASoG,EAAc,KAAO,KAHlC,sCAWhB,cAAC,IAAD,CAAMsB,MAAI,EAACvI,GAAI,GAAf,SACI,cAAC,IAAD,CACI8I,cAAe,CACXC,SAAU,GACVC,qBAAsB,GACtBC,OAAQ,MAEZC,iBAAkBC,MAAaC,MAAM,CACjCL,SAAUI,MAAaE,IAAI,KAAKC,SAAS,wBACzCN,qBAAsBG,MAAaI,MAC/B,CAACJ,IAAQ,YAAa,MACtB,0BAGRK,SAAQ,uCAAE,WAAOC,EAAP,0BAAAC,EAAA,yDAAiBC,EAAjB,EAAiBA,UAAWC,EAA5B,EAA4BA,UAAWC,EAAvC,EAAuCA,cAAvC,SAEFzB,QAAQC,IAAIoB,EAAQ7B,GACdkC,EAAU,CACZlC,QACAmB,SAAUU,EAAOV,UAErBX,QAAQC,IAAIyB,EAAS,SACjBhD,EAAY3E,QARd,iCASyBvE,IAAYO,eAAe2L,GATpD,OASQC,EATR,OAUEC,mBAAS,CACLC,KAAM,UACNC,QAASH,EAASjM,KAAKoM,QACvBC,mBAAoB,MAExBpD,EAAS,KACT6C,EAAU,CAAEQ,SAAS,IACrBP,GAAc,GAjBhB,0DAoBFG,mBAAS,CACLC,KAAM,QACNC,QAAS,qBACTC,mBAAoB,MAEpBrD,EAAY3E,UACZyH,EAAU,CAAEQ,SAAS,IACrBT,EAAU,CAAEV,OAAQ,KAAIiB,UACxBL,GAAc,IA5BhB,0DAAF,wDAbZ,SA8CK,gBAAGQ,EAAH,EAAGA,OAAQC,EAAX,EAAWA,WAAYC,EAAvB,EAAuBA,aAAcC,EAArC,EAAqCA,aAAcC,EAAnD,EAAmDA,aAAcC,EAAjE,EAAiEA,QAASjB,EAA1E,EAA0EA,OAA1E,OACG,uBAAMkB,YAAU,EAACnB,SAAUgB,EAA3B,UACI,eAAC,IAAD,CACII,WAAS,EACTC,MAAOC,QAAQJ,EAAQ3B,UAAYsB,EAAOtB,UAC1CjJ,GAAE,eAAOR,EAAMyL,WAAWC,aAH9B,UAKI,cAAC,IAAD,CAAYC,QAAQ,uCAApB,sBACA,cAAC,IAAD,CACIC,GAAG,uCACHjB,KAAM3C,EAAe,OAAS,WAC9B9F,MAAOiI,EAAOV,SACdjF,KAAK,WACLxB,MAAM,WACN6I,OAAQb,EACRc,SAAU,SAACC,GACPd,EAAac,GACbnD,EAAemD,EAAEpK,OAAOO,QAE5B8J,aACI,cAAC,IAAD,CAAgBjH,SAAS,MAAzB,SACI,cAAC,IAAD,CACI,aAAW,6BACXkH,QAASzD,EACT0D,YAAazD,EACb0D,KAAK,MACLzF,KAAK,QALT,SAOKsB,EAAe,cAAC,IAAD,IAAiB,cAAC,IAAD,QAI7CoE,WAAY,KAEfhB,EAAQ3B,UAAYsB,EAAOtB,UACxB,cAAC,IAAD,CAAgB8B,OAAK,EAACK,GAAG,gDAAzB,SACKb,EAAOtB,cAKN,IAAbvB,GACG,cAAC,IAAD,CAAaoD,WAAS,EAAtB,SACI,cAAC,IAAD,CAAK9K,GAAI,CAAE2I,GAAI,GAAf,SACI,eAAC,IAAD,CAAMH,WAAS,EAACI,QAAS,EAAG/D,WAAW,SAAvC,UACI,cAAC,IAAD,CAAM4D,MAAI,EAAV,SACI,cAAC,IAAD,CACIoD,MAAO,CAAEtM,gBAAe,OAAEqI,QAAF,IAAEA,OAAF,EAAEA,EAAOnF,OACjCzC,GAAI,CAAE8L,MAAO,GAAInH,OAAQ,EAAGoH,aAAc,WAGlD,cAAC,IAAD,CAAMtD,MAAI,EAAV,SACI,cAAC,IAAD,CAAY1H,QAAQ,YAAYiL,SAAS,UAAzC,gBACKpE,QADL,IACKA,OADL,EACKA,EAAOpF,iBAQhC,eAAC,IAAD,CACIsI,WAAS,EACTC,MAAOC,QAAQJ,EAAQ1B,sBAAwBqB,EAAOrB,sBACtDlJ,GAAE,eAAOR,EAAMyL,WAAWC,aAH9B,UAKI,cAAC,IAAD,CAAYC,QAAQ,+CAApB,8BAGA,cAAC,IAAD,CACIC,GAAG,+CACHjB,KAAM3C,EAAe,OAAS,WAC9B9F,MAAOiI,EAAOT,qBACdlF,KAAK,uBACLxB,MAAM,mBACN6I,OAAQb,EACRc,SAAU,SAACC,GACPd,EAAac,GACbnD,EAAemD,EAAEpK,OAAOO,QAE5B8J,aACI,cAAC,IAAD,CAAgBjH,SAAS,MAAzB,SACI,cAAC,IAAD,CACI,aAAW,6BACXkH,QAASzD,EACT0D,YAAazD,EACb0D,KAAK,MACLzF,KAAK,QALT,SAOKsB,EAAe,cAAC,IAAD,IAAiB,cAAC,IAAD,QAI7CoE,WAAY,KAEfhB,EAAQ1B,sBAAwBqB,EAAOrB,sBACpC,cAAC,IAAD,CACI6B,OAAK,EACLK,GAAG,wDAFP,SAIKb,EAAOrB,0BAKpB,cAAC,IAAD,CAAKlJ,GAAI,CAAEiM,GAAI,GAAf,SACI,cAAC,IAAD,UACI,cAAC,IAAD,CACIC,kBAAgB,EAChBC,SAAUxB,EACVG,WAAS,EACT5E,KAAK,QACLiE,KAAK,SACLpJ,QAAQ,YACR0B,MAAM,YAPV,iDAsB5C,cAAC,IAAD,CAAMgG,MAAI,EAACvI,GAAI,GAAIF,GAAI,CAAE0I,EAAG,EAAGuD,GAAI,GAAnC,SACI,cAAC,IAAD","file":"static/js/10.90a8e8cb.chunk.js","sourcesContent":["import axios from 'axios';\nimport Config from '../config/config';\n\nconst Apiurl = Config.apiUrl;\nconst headers = {\n    'Content-Type': 'application/json',\n    'Access-Control-Allow-Origin': '*'\n};\nconst HttpService = {\n    register(data) {\n        return axios.post(`${Apiurl}vendorLogReg/signup`, data);\n    },\n    vendorLogin(data) {\n        return axios.post(`${Apiurl}vendorLogReg/login`, data);\n    },\n    vendorForgotPassword(data) {\n        return axios.post(`${Apiurl}vendorLogReg/forgot-password`, data);\n    },\n    setNewPassword(data) {\n        return axios.post(`${Apiurl}vendorLogReg/set-password`, data);\n    },\n    getVendorProfileDetail() {\n        return axios.get(`${Apiurl}vendorLogReg/loggedVendor`);\n    },\n    vendorProfileUpdate(data) {\n        return axios.put(`${Apiurl}vendors/editVendorProfile`, data);\n    },\n    getAllShippingOrderData() {\n        return axios.get(`${Apiurl}shippingOrders/all`);\n    },\n    getshippingOrderViewDetails(orderid) {\n        return axios.get(`${Apiurl}shippingOrders/getShippingOrderById/${orderid}`);\n    },\n    checkPinCodes(pincode) {\n        return axios.get(`https://api.postalpincode.in/pincode/${pincode}`, { headers });\n    },\n    createShippingOrder(orderData) {\n        return axios.post(`${Apiurl}shippingOrders/new`, orderData);\n    },\n    cloneShippingOrder(orderId) {\n        return axios.put(`${Apiurl}shippingOrders/cloneShippingOrder/${orderId}`);\n    },\n    cancelShippingOrder(orderId) {\n        return axios.put(`${Apiurl}shippingOrders/cancelShippingOrder/${orderId}`);\n    },\n    updateShippingOrder(orderId, orderData) {\n        return axios.put(`${Apiurl}shippingOrders/editShippingOrder/${orderId}`, orderData);\n    }\n};\n\nexport default HttpService;\n","const dev = {\n    apiUrl: 'http://3.109.60.131:3007/api/',\n    aadharTestRequest: 'https://test.zoop.one/in/identity/okyc/otp/request',\n    aadharLiveRequest: 'https://live.zoop.one/in/identity/okyc/otp/request',\n    aadharOtpVerifyRequest: 'https://test.zoop.one/in/identity/okyc/otp/verify'\n};\n\nconst test = {\n    apiUrl: 'http://3.109.60.131:3007/api/',\n    aadharTestRequest: 'https://test.zoop.one/in/identity/okyc/otp/request',\n    aadharLiveRequest: 'https://live.zoop.one/in/identity/okyc/otp/request',\n    aadharOtpVerifyRequest: 'https://test.zoop.one/in/identity/okyc/otp/verify'\n};\n\nconst prod = {\n    apiUrl: 'http://3.109.60.131:3007/api/'\n};\n\n// const config = process.env.REACT_APP_STAGE === 'test' ? test : dev;\n\n// eslint-disable-next-line no-nested-ternary\nconst config = process.env.REACT_APP_STAGE === 'production' ? prod : process.env.REACT_APP_STAGE === 'test' ? test : dev;\nexport default config;\n","// material-ui\nimport { styled } from '@mui/material/styles';\n\n// ==============================|| AUTHENTICATION 1 WRAPPER ||============================== //\n\nconst AuthWrapper1 = styled('div')(({ theme }) => ({\n    backgroundColor: theme.palette.primary.light,\n    minHeight: '100vh'\n}));\n\nexport default AuthWrapper1;\n","import PropTypes from 'prop-types';\n\n// material-ui\nimport { Box } from '@mui/material';\n\n// project import\nimport MainCard from 'ui-component/cards/MainCard';\n\n// ==============================|| AUTHENTICATION CARD WRAPPER ||============================== //\n\nconst AuthCardWrapper = ({ children, ...other }) => (\n    <MainCard\n        sx={{\n            maxWidth: { xs: 400, lg: 475 },\n            margin: { xs: 2.5, md: 3 },\n            '& > *': {\n                flexGrow: 1,\n                flexBasis: '50%'\n            }\n        }}\n        content={false}\n        {...other}\n    >\n        <Box sx={{ p: { xs: 2, sm: 3, xl: 5 } }}>{children}</Box>\n    </MainCard>\n);\n\nAuthCardWrapper.propTypes = {\n    children: PropTypes.node\n};\n\nexport default AuthCardWrapper;\n","// material-ui\nimport { Link, Typography, Stack } from '@mui/material';\n\n// ==============================|| FOOTER - AUTHENTICATION 2 & 3 ||============================== //\n\nconst AuthFooter = () => (\n    <Stack direction=\"row\" justifyContent=\"space-between\">\n        <Typography variant=\"subtitle2\" component={Link} href=\"\" target=\"_blank\" underline=\"hover\">\n            YSOSY Technology\n        </Typography>\n        <Typography variant=\"subtitle2\" component={Link} href=\"https://devaitecsolutions.com/\" target=\"_blank\" underline=\"hover\">\n            &copy; Devai Tec Solutions\n        </Typography>\n    </Stack>\n);\n\nexport default AuthFooter;\n","\"use strict\";\n\nvar _interopRequireDefault = require(\"@babel/runtime/helpers/interopRequireDefault\");\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.default = void 0;\n\nvar _createSvgIcon = _interopRequireDefault(require(\"./utils/createSvgIcon\"));\n\nvar _jsxRuntime = require(\"react/jsx-runtime\");\n\nvar _default = (0, _createSvgIcon.default)( /*#__PURE__*/(0, _jsxRuntime.jsx)(\"path\", {\n  d: \"M12 4.5C7 4.5 2.73 7.61 1 12c1.73 4.39 6 7.5 11 7.5s9.27-3.11 11-7.5c-1.73-4.39-6-7.5-11-7.5zM12 17c-2.76 0-5-2.24-5-5s2.24-5 5-5 5 2.24 5 5-2.24 5-5 5zm0-8c-1.66 0-3 1.34-3 3s1.34 3 3 3 3-1.34 3-3-1.34-3-3-3z\"\n}), 'Visibility');\n\nexports.default = _default;","\"use strict\";\n\nvar _interopRequireDefault = require(\"@babel/runtime/helpers/interopRequireDefault\");\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.default = void 0;\n\nvar _createSvgIcon = _interopRequireDefault(require(\"./utils/createSvgIcon\"));\n\nvar _jsxRuntime = require(\"react/jsx-runtime\");\n\nvar _default = (0, _createSvgIcon.default)( /*#__PURE__*/(0, _jsxRuntime.jsx)(\"path\", {\n  d: \"M12 7c2.76 0 5 2.24 5 5 0 .65-.13 1.26-.36 1.83l2.92 2.92c1.51-1.26 2.7-2.89 3.43-4.75-1.73-4.39-6-7.5-11-7.5-1.4 0-2.74.25-3.98.7l2.16 2.16C10.74 7.13 11.35 7 12 7zM2 4.27l2.28 2.28.46.46C3.08 8.3 1.78 10.02 1 12c1.73 4.39 6 7.5 11 7.5 1.55 0 3.03-.3 4.38-.84l.42.42L19.73 22 21 20.73 3.27 3 2 4.27zM7.53 9.8l1.55 1.55c-.05.21-.08.43-.08.65 0 1.66 1.34 3 3 3 .22 0 .44-.03.65-.08l1.55 1.55c-.67.33-1.41.53-2.2.53-2.76 0-5-2.24-5-5 0-.79.2-1.53.53-2.2zm4.31-.78 3.15 3.15.02-.16c0-1.66-1.34-3-3-3l-.17.01z\"\n}), 'VisibilityOff');\n\nexports.default = _default;","import { useEffect, useRef } from 'react';\n\n// ==============================|| ELEMENT REFERENCE HOOKS  ||============================== //\n\nconst useScriptRef = () => {\n    const scripted = useRef(true);\n\n    useEffect(\n        () => () => {\n            scripted.current = false;\n        },\n        []\n    );\n\n    return scripted;\n};\n\nexport default useScriptRef;\n","/**\n * Password validator for login pages\n */\nimport value from 'assets/scss/_themes-vars.module.scss';\n\n// has number\nconst hasNumber = (number) => new RegExp(/[0-9]/).test(number);\n\n// has mix of small and capitals\nconst hasMixed = (number) => new RegExp(/[a-z]/).test(number) && new RegExp(/[A-Z]/).test(number);\n\n// has special chars\nconst hasSpecial = (number) => new RegExp(/[!#@$%^&*)(+=._-]/).test(number);\n\n// set color based on password strength\nexport const strengthColor = (count) => {\n    if (count < 2) return { label: 'Poor', color: value.errorMain };\n    if (count < 3) return { label: 'Weak', color: value.warningDark };\n    if (count < 4) return { label: 'Normal', color: value.orangeMain };\n    if (count < 5) return { label: 'Good', color: value.successMain };\n    if (count < 6) return { label: 'Strong', color: value.successDark };\n    return { label: 'Poor', color: value.errorMain };\n};\n\n// password strength indicator\nexport const strengthIndicator = (number) => {\n    let strengths = 0;\n    if (number.length > 5) strengths += 1;\n    if (number.length > 7) strengths += 1;\n    if (hasNumber(number)) strengths += 1;\n    if (hasSpecial(number)) strengths += 1;\n    if (hasMixed(number)) strengths += 1;\n    return strengths;\n};\n","import { generateUtilityClass, generateUtilityClasses } from '@mui/base';\nexport function getInputAdornmentUtilityClass(slot) {\n  return generateUtilityClass('MuiInputAdornment', slot);\n}\nconst inputAdornmentClasses = generateUtilityClasses('MuiInputAdornment', ['root', 'filled', 'standard', 'outlined', 'positionStart', 'positionEnd', 'disablePointerEvents', 'hiddenLabel', 'sizeSmall']);\nexport default inputAdornmentClasses;","import _objectWithoutPropertiesLoose from \"@babel/runtime/helpers/esm/objectWithoutPropertiesLoose\";\nimport _extends from \"@babel/runtime/helpers/esm/extends\";\n\nvar _span;\n\nconst _excluded = [\"children\", \"className\", \"component\", \"disablePointerEvents\", \"disableTypography\", \"position\", \"variant\"];\nimport * as React from 'react';\nimport PropTypes from 'prop-types';\nimport clsx from 'clsx';\nimport { unstable_composeClasses as composeClasses } from '@mui/base';\nimport capitalize from '../utils/capitalize';\nimport Typography from '../Typography';\nimport FormControlContext from '../FormControl/FormControlContext';\nimport useFormControl from '../FormControl/useFormControl';\nimport styled from '../styles/styled';\nimport inputAdornmentClasses, { getInputAdornmentUtilityClass } from './inputAdornmentClasses';\nimport useThemeProps from '../styles/useThemeProps';\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nimport { jsxs as _jsxs } from \"react/jsx-runtime\";\n\nconst overridesResolver = (props, styles) => {\n  const {\n    ownerState\n  } = props;\n  return [styles.root, styles[`position${capitalize(ownerState.position)}`], ownerState.disablePointerEvents === true && styles.disablePointerEvents, styles[ownerState.variant]];\n};\n\nconst useUtilityClasses = ownerState => {\n  const {\n    classes,\n    disablePointerEvents,\n    hiddenLabel,\n    position,\n    size,\n    variant\n  } = ownerState;\n  const slots = {\n    root: ['root', disablePointerEvents && 'disablePointerEvents', position && `position${capitalize(position)}`, variant, hiddenLabel && 'hiddenLabel', size && `size${capitalize(size)}`]\n  };\n  return composeClasses(slots, getInputAdornmentUtilityClass, classes);\n};\n\nconst InputAdornmentRoot = styled('div', {\n  name: 'MuiInputAdornment',\n  slot: 'Root',\n  overridesResolver\n})(({\n  theme,\n  ownerState\n}) => _extends({\n  display: 'flex',\n  height: '0.01em',\n  // Fix IE11 flexbox alignment. To remove at some point.\n  maxHeight: '2em',\n  alignItems: 'center',\n  whiteSpace: 'nowrap',\n  color: theme.palette.action.active\n}, ownerState.variant === 'filled' && {\n  // Styles applied to the root element if `variant=\"filled\"`.\n  [`&.${inputAdornmentClasses.positionStart}&:not(.${inputAdornmentClasses.hiddenLabel})`]: {\n    marginTop: 16\n  }\n}, ownerState.position === 'start' && {\n  // Styles applied to the root element if `position=\"start\"`.\n  marginRight: 8\n}, ownerState.position === 'end' && {\n  // Styles applied to the root element if `position=\"end\"`.\n  marginLeft: 8\n}, ownerState.disablePointerEvents === true && {\n  // Styles applied to the root element if `disablePointerEvents={true}`.\n  pointerEvents: 'none'\n}));\nconst InputAdornment = /*#__PURE__*/React.forwardRef(function InputAdornment(inProps, ref) {\n  const props = useThemeProps({\n    props: inProps,\n    name: 'MuiInputAdornment'\n  });\n\n  const {\n    children,\n    className,\n    component = 'div',\n    disablePointerEvents = false,\n    disableTypography = false,\n    position,\n    variant: variantProp\n  } = props,\n        other = _objectWithoutPropertiesLoose(props, _excluded);\n\n  const muiFormControl = useFormControl() || {};\n  let variant = variantProp;\n\n  if (variantProp && muiFormControl.variant) {\n    if (process.env.NODE_ENV !== 'production') {\n      if (variantProp === muiFormControl.variant) {\n        console.error('MUI: The `InputAdornment` variant infers the variant prop ' + 'you do not have to provide one.');\n      }\n    }\n  }\n\n  if (muiFormControl && !variant) {\n    variant = muiFormControl.variant;\n  }\n\n  const ownerState = _extends({}, props, {\n    hiddenLabel: muiFormControl.hiddenLabel,\n    size: muiFormControl.size,\n    disablePointerEvents,\n    position,\n    variant\n  });\n\n  const classes = useUtilityClasses(ownerState);\n  return /*#__PURE__*/_jsx(FormControlContext.Provider, {\n    value: null,\n    children: /*#__PURE__*/_jsx(InputAdornmentRoot, _extends({\n      as: component,\n      ownerState: ownerState,\n      className: clsx(classes.root, className),\n      ref: ref\n    }, other, {\n      children: typeof children === 'string' && !disableTypography ? /*#__PURE__*/_jsx(Typography, {\n        color: \"text.secondary\",\n        children: children\n      }) : /*#__PURE__*/_jsxs(React.Fragment, {\n        children: [position === 'start' ?\n        /* notranslate needed while Google Translate will not fix zero-width space issue */\n        _span || (_span = /*#__PURE__*/_jsx(\"span\", {\n          className: \"notranslate\",\n          children: \"\\u200B\"\n        })) : null, children]\n      })\n    }))\n  });\n});\nprocess.env.NODE_ENV !== \"production\" ? InputAdornment.propTypes\n/* remove-proptypes */\n= {\n  // ----------------------------- Warning --------------------------------\n  // | These PropTypes are generated from the TypeScript type definitions |\n  // |     To update them edit the d.ts file and run \"yarn proptypes\"     |\n  // ----------------------------------------------------------------------\n\n  /**\n   * The content of the component, normally an `IconButton` or string.\n   */\n  children: PropTypes.node,\n\n  /**\n   * Override or extend the styles applied to the component.\n   */\n  classes: PropTypes.object,\n\n  /**\n   * @ignore\n   */\n  className: PropTypes.string,\n\n  /**\n   * The component used for the root node.\n   * Either a string to use a HTML element or a component.\n   */\n  component: PropTypes.elementType,\n\n  /**\n   * Disable pointer events on the root.\n   * This allows for the content of the adornment to focus the `input` on click.\n   * @default false\n   */\n  disablePointerEvents: PropTypes.bool,\n\n  /**\n   * If children is a string then disable wrapping in a Typography component.\n   * @default false\n   */\n  disableTypography: PropTypes.bool,\n\n  /**\n   * The position this adornment should appear relative to the `Input`.\n   */\n  position: PropTypes.oneOf(['end', 'start']).isRequired,\n\n  /**\n   * The system prop that allows defining system overrides as well as additional CSS styles.\n   */\n  sx: PropTypes.oneOfType([PropTypes.arrayOf(PropTypes.oneOfType([PropTypes.func, PropTypes.object, PropTypes.bool])), PropTypes.func, PropTypes.object]),\n\n  /**\n   * The variant to use.\n   * Note: If you are using the `TextField` component or the `FormControl` component\n   * you do not have to set this manually.\n   */\n  variant: PropTypes.oneOf(['filled', 'outlined', 'standard'])\n} : void 0;\nexport default InputAdornment;","import { useState } from 'react';\nimport { useParams, useNavigate } from 'react-router-dom';\n// material-ui\nimport { useTheme } from '@mui/material/styles';\n\n// project imports\nimport AuthWrapper1 from '../AuthWrapper1';\nimport AuthCardWrapper from '../AuthCardWrapper';\nimport AuthFooter from 'ui-component/cards/AuthFooter';\n\nimport {\n    IconButton,\n    InputAdornment,\n    Grid,\n    Stack,\n    Typography,\n    useMediaQuery,\n    Box,\n    Button,\n    FormControl,\n    FormHelperText,\n    InputLabel,\n    OutlinedInput\n} from '@mui/material';\n\nimport * as Yup from 'yup';\nimport { Formik } from 'formik';\nimport HttpService from '../../../../services/httpService';\n// project imports\nimport useScriptRef from 'hooks/useScriptRef';\nimport AnimateButton from 'ui-component/extended/AnimateButton';\nimport { notifier } from 'react-toast-notifier';\nimport { strengthColor, strengthIndicator } from 'utils/password-strength';\nimport Visibility from '@mui/icons-material/Visibility';\nimport VisibilityOff from '@mui/icons-material/VisibilityOff';\n\n// ================================|| AUTH3 - LOGIN ||================================ //\n\nconst ForgotResetPassword = () => {\n    const theme = useTheme();\n    const scriptedRef = useScriptRef();\n    const navigate = useNavigate();\n    const matchDownSM = useMediaQuery(theme.breakpoints.down('md'));\n    const [showPassword, setShowPassword] = useState(false);\n    const [strength, setStrength] = useState(0);\n    const [level, setLevel] = useState();\n    const { email } = useParams();\n\n    const handleClickShowPassword = () => {\n        setShowPassword(!showPassword);\n    };\n\n    const handleMouseDownPassword = (event) => {\n        event.preventDefault();\n    };\n\n    const changePassword = (value) => {\n        const temp = strengthIndicator(value);\n        setStrength(temp);\n        setLevel(strengthColor(temp));\n    };\n    console.log(email, 'email');\n    return (\n        <AuthWrapper1>\n            <Grid container direction=\"column\" justifyContent=\"flex-end\" sx={{ minHeight: '100vh' }}>\n                <Grid item xs={12}>\n                    <Grid container justifyContent=\"center\" alignItems=\"center\" sx={{ minHeight: 'calc(100vh - 68px)' }}>\n                        <Grid item sx={{ m: { xs: 1, sm: 3 }, mb: 0 }}>\n                            <AuthCardWrapper>\n                                <Grid container spacing={2} alignItems=\"center\" justifyContent=\"center\">\n                                    <Grid item xs={12}>\n                                        <Grid\n                                            container\n                                            direction={matchDownSM ? 'column-reverse' : 'row'}\n                                            alignItems=\"center\"\n                                            justifyContent=\"center\"\n                                        >\n                                            <Grid item>\n                                                <Stack alignItems=\"center\" justifyContent=\"center\" spacing={1}>\n                                                    <Typography\n                                                        color={theme.palette.secondary.main}\n                                                        gutterBottom\n                                                        variant={matchDownSM ? 'h3' : 'h2'}\n                                                    >\n                                                        Set New Password\n                                                    </Typography>\n                                                </Stack>\n                                            </Grid>\n                                        </Grid>\n                                    </Grid>\n                                    <Grid item xs={12}>\n                                        <Formik\n                                            initialValues={{\n                                                password: '',\n                                                passwordConfirmation: '',\n                                                submit: null\n                                            }}\n                                            validationSchema={Yup.object().shape({\n                                                password: Yup.string().max(255).required('Password is required'),\n                                                passwordConfirmation: Yup.string().oneOf(\n                                                    [Yup.ref('password'), null],\n                                                    'Passwords must match'\n                                                )\n                                            })}\n                                            onSubmit={async (values, { setErrors, setStatus, setSubmitting }) => {\n                                                try {\n                                                    console.log(values, email);\n                                                    const objData = {\n                                                        email,\n                                                        password: values.password\n                                                    };\n                                                    console.log(objData, 'Data');\n                                                    if (scriptedRef.current) {\n                                                        const response = await HttpService.setNewPassword(objData);\n                                                        notifier({\n                                                            type: 'success',\n                                                            message: response.data.message,\n                                                            autoDismissTimeout: 5000\n                                                        });\n                                                        navigate('/');\n                                                        setStatus({ success: true });\n                                                        setSubmitting(false);\n                                                    }\n                                                } catch (err) {\n                                                    notifier({\n                                                        type: 'error',\n                                                        message: 'Email id is wrong!',\n                                                        autoDismissTimeout: 5000\n                                                    });\n                                                    if (scriptedRef.current) {\n                                                        setStatus({ success: false });\n                                                        setErrors({ submit: err.message });\n                                                        setSubmitting(false);\n                                                    }\n                                                }\n                                            }}\n                                        >\n                                            {({ errors, handleBlur, handleChange, handleSubmit, isSubmitting, touched, values }) => (\n                                                <form noValidate onSubmit={handleSubmit}>\n                                                    <FormControl\n                                                        fullWidth\n                                                        error={Boolean(touched.password && errors.password)}\n                                                        sx={{ ...theme.typography.customInput }}\n                                                    >\n                                                        <InputLabel htmlFor=\"outlined-adornment-password-register\">Password</InputLabel>\n                                                        <OutlinedInput\n                                                            id=\"outlined-adornment-password-register\"\n                                                            type={showPassword ? 'text' : 'password'}\n                                                            value={values.password}\n                                                            name=\"password\"\n                                                            label=\"Password\"\n                                                            onBlur={handleBlur}\n                                                            onChange={(e) => {\n                                                                handleChange(e);\n                                                                changePassword(e.target.value);\n                                                            }}\n                                                            endAdornment={\n                                                                <InputAdornment position=\"end\">\n                                                                    <IconButton\n                                                                        aria-label=\"toggle password visibility\"\n                                                                        onClick={handleClickShowPassword}\n                                                                        onMouseDown={handleMouseDownPassword}\n                                                                        edge=\"end\"\n                                                                        size=\"large\"\n                                                                    >\n                                                                        {showPassword ? <Visibility /> : <VisibilityOff />}\n                                                                    </IconButton>\n                                                                </InputAdornment>\n                                                            }\n                                                            inputProps={{}}\n                                                        />\n                                                        {touched.password && errors.password && (\n                                                            <FormHelperText error id=\"standard-weight-helper-text-password-register\">\n                                                                {errors.password}\n                                                            </FormHelperText>\n                                                        )}\n                                                    </FormControl>\n\n                                                    {strength !== 0 && (\n                                                        <FormControl fullWidth>\n                                                            <Box sx={{ mb: 2 }}>\n                                                                <Grid container spacing={2} alignItems=\"center\">\n                                                                    <Grid item>\n                                                                        <Box\n                                                                            style={{ backgroundColor: level?.color }}\n                                                                            sx={{ width: 85, height: 8, borderRadius: '7px' }}\n                                                                        />\n                                                                    </Grid>\n                                                                    <Grid item>\n                                                                        <Typography variant=\"subtitle1\" fontSize=\"0.75rem\">\n                                                                            {level?.label}\n                                                                        </Typography>\n                                                                    </Grid>\n                                                                </Grid>\n                                                            </Box>\n                                                        </FormControl>\n                                                    )}\n\n                                                    <FormControl\n                                                        fullWidth\n                                                        error={Boolean(touched.passwordConfirmation && errors.passwordConfirmation)}\n                                                        sx={{ ...theme.typography.customInput }}\n                                                    >\n                                                        <InputLabel htmlFor=\"outlined-adornment-confirm-password-register\">\n                                                            Confirm Password\n                                                        </InputLabel>\n                                                        <OutlinedInput\n                                                            id=\"outlined-adornment-confirm-password-register\"\n                                                            type={showPassword ? 'text' : 'password'}\n                                                            value={values.passwordConfirmation}\n                                                            name=\"passwordConfirmation\"\n                                                            label=\"Confirm Password\"\n                                                            onBlur={handleBlur}\n                                                            onChange={(e) => {\n                                                                handleChange(e);\n                                                                changePassword(e.target.value);\n                                                            }}\n                                                            endAdornment={\n                                                                <InputAdornment position=\"end\">\n                                                                    <IconButton\n                                                                        aria-label=\"toggle password visibility\"\n                                                                        onClick={handleClickShowPassword}\n                                                                        onMouseDown={handleMouseDownPassword}\n                                                                        edge=\"end\"\n                                                                        size=\"large\"\n                                                                    >\n                                                                        {showPassword ? <Visibility /> : <VisibilityOff />}\n                                                                    </IconButton>\n                                                                </InputAdornment>\n                                                            }\n                                                            inputProps={{}}\n                                                        />\n                                                        {touched.passwordConfirmation && errors.passwordConfirmation && (\n                                                            <FormHelperText\n                                                                error\n                                                                id=\"standard-weight-helper-text-confirm-password-register\"\n                                                            >\n                                                                {errors.passwordConfirmation}\n                                                            </FormHelperText>\n                                                        )}\n                                                    </FormControl>\n\n                                                    <Box sx={{ mt: 2 }}>\n                                                        <AnimateButton>\n                                                            <Button\n                                                                disableElevation\n                                                                disabled={isSubmitting}\n                                                                fullWidth\n                                                                size=\"large\"\n                                                                type=\"submit\"\n                                                                variant=\"contained\"\n                                                                color=\"secondary\"\n                                                            >\n                                                                Set Password\n                                                            </Button>\n                                                        </AnimateButton>\n                                                    </Box>\n                                                </form>\n                                            )}\n                                        </Formik>\n                                    </Grid>\n                                </Grid>\n                            </AuthCardWrapper>\n                        </Grid>\n                    </Grid>\n                </Grid>\n                <Grid item xs={12} sx={{ m: 3, mt: 1 }}>\n                    <AuthFooter />\n                </Grid>\n            </Grid>\n        </AuthWrapper1>\n    );\n};\n\nexport default ForgotResetPassword;\n"],"sourceRoot":""}